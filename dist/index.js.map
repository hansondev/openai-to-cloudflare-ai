{
  "version": 3,
  "sources": ["../node_modules/hono/dist/utils/url.js", "../node_modules/hono/dist/utils/cookie.js", "../node_modules/hono/dist/utils/stream.js", "../node_modules/hono/dist/context.js", "../node_modules/hono/dist/compose.js", "../node_modules/hono/dist/http-exception.js", "../node_modules/hono/dist/utils/body.js", "../node_modules/hono/dist/request.js", "../node_modules/hono/dist/router.js", "../node_modules/hono/dist/hono-base.js", "../node_modules/hono/dist/router/reg-exp-router/node.js", "../node_modules/hono/dist/router/reg-exp-router/trie.js", "../node_modules/hono/dist/router/reg-exp-router/router.js", "../node_modules/hono/dist/router/smart-router/router.js", "../node_modules/hono/dist/router/trie-router/node.js", "../node_modules/hono/dist/router/trie-router/router.js", "../node_modules/hono/dist/hono.js", "../node_modules/hono/dist/utils/html.js", "../node_modules/hono/dist/helper/html/index.js", "../node_modules/hono/dist/jsx/index.js", "../node_modules/hono/dist/jsx/streaming.js", "../node_modules/hono/dist/middleware/jsx-renderer/index.js", "../node_modules/hono/dist/jsx/jsx-dev-runtime.js", "../src/renderer.tsx", "../node_modules/@cloudflare/ai/src/tensor.ts", "../node_modules/@cloudflare/ai/src/templates.ts", "../node_modules/@cloudflare/ai/src/tasks/text-generation.ts", "../node_modules/@cloudflare/ai/src/tasks/text-classification.ts", "../node_modules/@cloudflare/ai/src/tasks/text-embeddings.ts", "../node_modules/@cloudflare/ai/src/tasks/translation.ts", "../node_modules/@cloudflare/ai/src/tasks/speech-recognition.ts", "../node_modules/@cloudflare/ai/src/tasks/data/labels.ts", "../node_modules/@cloudflare/ai/src/tasks/image-classification.ts", "../node_modules/@cloudflare/ai/src/tasks/object-detection.ts", "../node_modules/@cloudflare/ai/src/tasks/text-to-image.ts", "../node_modules/@cloudflare/ai/src/tasks/sentence-similarity.ts", "../node_modules/@cloudflare/ai/src/catalog.ts", "../node_modules/@cloudflare/ai/src/tools.ts", "../node_modules/@cloudflare/ai/src/session.ts", "../node_modules/@cloudflare/ai/src/ai.ts", "../src/index.tsx"],
  "sourceRoot": "dist",
  "sourcesContent": ["// src/utils/url.ts\nvar splitPath = (path) => {\n  const paths = path.split(\"/\");\n  if (paths[0] === \"\") {\n    paths.shift();\n  }\n  return paths;\n};\nvar splitRoutingPath = (path) => {\n  const groups = [];\n  for (let i = 0; ; ) {\n    let replaced = false;\n    path = path.replace(/\\{[^}]+\\}/g, (m) => {\n      const mark = `@\\\\${i}`;\n      groups[i] = [mark, m];\n      i++;\n      replaced = true;\n      return mark;\n    });\n    if (!replaced) {\n      break;\n    }\n  }\n  const paths = path.split(\"/\");\n  if (paths[0] === \"\") {\n    paths.shift();\n  }\n  for (let i = groups.length - 1; i >= 0; i--) {\n    const [mark] = groups[i];\n    for (let j = paths.length - 1; j >= 0; j--) {\n      if (paths[j].indexOf(mark) !== -1) {\n        paths[j] = paths[j].replace(mark, groups[i][1]);\n        break;\n      }\n    }\n  }\n  return paths;\n};\nvar patternCache = {};\nvar getPattern = (label) => {\n  if (label === \"*\") {\n    return \"*\";\n  }\n  const match = label.match(/^\\:([^\\{\\}]+)(?:\\{(.+)\\})?$/);\n  if (match) {\n    if (!patternCache[label]) {\n      if (match[2]) {\n        patternCache[label] = [label, match[1], new RegExp(\"^\" + match[2] + \"$\")];\n      } else {\n        patternCache[label] = [label, match[1], true];\n      }\n    }\n    return patternCache[label];\n  }\n  return null;\n};\nvar getPath = (request) => {\n  const match = request.url.match(/^https?:\\/\\/[^/]+(\\/[^?]*)/);\n  return match ? match[1] : \"\";\n};\nvar getQueryStrings = (url) => {\n  const queryIndex = url.indexOf(\"?\", 8);\n  return queryIndex === -1 ? \"\" : \"?\" + url.slice(queryIndex + 1);\n};\nvar getPathNoStrict = (request) => {\n  const result = getPath(request);\n  return result.length > 1 && result[result.length - 1] === \"/\" ? result.slice(0, -1) : result;\n};\nvar mergePath = (...paths) => {\n  let p = \"\";\n  let endsWithSlash = false;\n  for (let path of paths) {\n    if (p[p.length - 1] === \"/\") {\n      p = p.slice(0, -1);\n      endsWithSlash = true;\n    }\n    if (path[0] !== \"/\") {\n      path = `/${path}`;\n    }\n    if (path === \"/\" && endsWithSlash) {\n      p = `${p}/`;\n    } else if (path !== \"/\") {\n      p = `${p}${path}`;\n    }\n    if (path === \"/\" && p === \"\") {\n      p = \"/\";\n    }\n  }\n  return p;\n};\nvar checkOptionalParameter = (path) => {\n  const match = path.match(/^(.+|)(\\/\\:[^\\/]+)\\?$/);\n  if (!match)\n    return null;\n  const base = match[1];\n  const optional = base + match[2];\n  return [base === \"\" ? \"/\" : base.replace(/\\/$/, \"\"), optional];\n};\nvar _decodeURI = (value) => {\n  if (!/[%+]/.test(value)) {\n    return value;\n  }\n  if (value.indexOf(\"+\") !== -1) {\n    value = value.replace(/\\+/g, \" \");\n  }\n  return /%/.test(value) ? decodeURIComponent_(value) : value;\n};\nvar _getQueryParam = (url, key, multiple) => {\n  let encoded;\n  if (!multiple && key && !/[%+]/.test(key)) {\n    let keyIndex2 = url.indexOf(`?${key}`, 8);\n    if (keyIndex2 === -1) {\n      keyIndex2 = url.indexOf(`&${key}`, 8);\n    }\n    while (keyIndex2 !== -1) {\n      const trailingKeyCode = url.charCodeAt(keyIndex2 + key.length + 1);\n      if (trailingKeyCode === 61) {\n        const valueIndex = keyIndex2 + key.length + 2;\n        const endIndex = url.indexOf(\"&\", valueIndex);\n        return _decodeURI(url.slice(valueIndex, endIndex === -1 ? void 0 : endIndex));\n      } else if (trailingKeyCode == 38 || isNaN(trailingKeyCode)) {\n        return \"\";\n      }\n      keyIndex2 = url.indexOf(`&${key}`, keyIndex2 + 1);\n    }\n    encoded = /[%+]/.test(url);\n    if (!encoded) {\n      return void 0;\n    }\n  }\n  const results = {};\n  encoded ?? (encoded = /[%+]/.test(url));\n  let keyIndex = url.indexOf(\"?\", 8);\n  while (keyIndex !== -1) {\n    const nextKeyIndex = url.indexOf(\"&\", keyIndex + 1);\n    let valueIndex = url.indexOf(\"=\", keyIndex);\n    if (valueIndex > nextKeyIndex && nextKeyIndex !== -1) {\n      valueIndex = -1;\n    }\n    let name = url.slice(\n      keyIndex + 1,\n      valueIndex === -1 ? nextKeyIndex === -1 ? void 0 : nextKeyIndex : valueIndex\n    );\n    if (encoded) {\n      name = _decodeURI(name);\n    }\n    keyIndex = nextKeyIndex;\n    if (name === \"\") {\n      continue;\n    }\n    let value;\n    if (valueIndex === -1) {\n      value = \"\";\n    } else {\n      value = url.slice(valueIndex + 1, nextKeyIndex === -1 ? void 0 : nextKeyIndex);\n      if (encoded) {\n        value = _decodeURI(value);\n      }\n    }\n    if (multiple) {\n      ;\n      (results[name] ?? (results[name] = [])).push(value);\n    } else {\n      results[name] ?? (results[name] = value);\n    }\n  }\n  return key ? results[key] : results;\n};\nvar getQueryParam = _getQueryParam;\nvar getQueryParams = (url, key) => {\n  return _getQueryParam(url, key, true);\n};\nvar decodeURIComponent_ = decodeURIComponent;\nexport {\n  checkOptionalParameter,\n  decodeURIComponent_,\n  getPath,\n  getPathNoStrict,\n  getPattern,\n  getQueryParam,\n  getQueryParams,\n  getQueryStrings,\n  mergePath,\n  splitPath,\n  splitRoutingPath\n};\n", "// src/utils/cookie.ts\nimport { decodeURIComponent_ } from \"./url.js\";\nvar algorithm = { name: \"HMAC\", hash: \"SHA-256\" };\nvar getCryptoKey = async (secret) => {\n  const secretBuf = typeof secret === \"string\" ? new TextEncoder().encode(secret) : secret;\n  return await crypto.subtle.importKey(\"raw\", secretBuf, algorithm, false, [\"sign\", \"verify\"]);\n};\nvar makeSignature = async (value, secret) => {\n  const key = await getCryptoKey(secret);\n  const signature = await crypto.subtle.sign(algorithm.name, key, new TextEncoder().encode(value));\n  return btoa(String.fromCharCode(...new Uint8Array(signature)));\n};\nvar verifySignature = async (base64Signature, value, secret) => {\n  try {\n    const signatureBinStr = atob(base64Signature);\n    const signature = new Uint8Array(signatureBinStr.length);\n    for (let i = 0; i < signatureBinStr.length; i++)\n      signature[i] = signatureBinStr.charCodeAt(i);\n    return await crypto.subtle.verify(algorithm, secret, signature, new TextEncoder().encode(value));\n  } catch (e) {\n    return false;\n  }\n};\nvar validCookieNameRegEx = /^[\\w!#$%&'*.^`|~+-]+$/;\nvar validCookieValueRegEx = /^[ !#-:<-[\\]-~]*$/;\nvar parse = (cookie, name) => {\n  const pairs = cookie.trim().split(\";\");\n  return pairs.reduce((parsedCookie, pairStr) => {\n    pairStr = pairStr.trim();\n    const valueStartPos = pairStr.indexOf(\"=\");\n    if (valueStartPos === -1)\n      return parsedCookie;\n    const cookieName = pairStr.substring(0, valueStartPos).trim();\n    if (name && name !== cookieName || !validCookieNameRegEx.test(cookieName))\n      return parsedCookie;\n    let cookieValue = pairStr.substring(valueStartPos + 1).trim();\n    if (cookieValue.startsWith('\"') && cookieValue.endsWith('\"'))\n      cookieValue = cookieValue.slice(1, -1);\n    if (validCookieValueRegEx.test(cookieValue))\n      parsedCookie[cookieName] = decodeURIComponent_(cookieValue);\n    return parsedCookie;\n  }, {});\n};\nvar parseSigned = async (cookie, secret, name) => {\n  const parsedCookie = {};\n  const secretKey = await getCryptoKey(secret);\n  for (const [key, value] of Object.entries(parse(cookie, name))) {\n    const signatureStartPos = value.lastIndexOf(\".\");\n    if (signatureStartPos < 1)\n      continue;\n    const signedValue = value.substring(0, signatureStartPos);\n    const signature = value.substring(signatureStartPos + 1);\n    if (signature.length !== 44 || !signature.endsWith(\"=\"))\n      continue;\n    const isVerified = await verifySignature(signature, signedValue, secretKey);\n    parsedCookie[key] = isVerified ? signedValue : false;\n  }\n  return parsedCookie;\n};\nvar _serialize = (name, value, opt = {}) => {\n  let cookie = `${name}=${value}`;\n  if (opt && typeof opt.maxAge === \"number\" && opt.maxAge >= 0) {\n    cookie += `; Max-Age=${Math.floor(opt.maxAge)}`;\n  }\n  if (opt.domain) {\n    cookie += `; Domain=${opt.domain}`;\n  }\n  if (opt.path) {\n    cookie += `; Path=${opt.path}`;\n  }\n  if (opt.expires) {\n    cookie += `; Expires=${opt.expires.toUTCString()}`;\n  }\n  if (opt.httpOnly) {\n    cookie += \"; HttpOnly\";\n  }\n  if (opt.secure) {\n    cookie += \"; Secure\";\n  }\n  if (opt.sameSite) {\n    cookie += `; SameSite=${opt.sameSite}`;\n  }\n  if (opt.partitioned) {\n    cookie += \"; Partitioned\";\n  }\n  return cookie;\n};\nvar serialize = (name, value, opt = {}) => {\n  value = encodeURIComponent(value);\n  return _serialize(name, value, opt);\n};\nvar serializeSigned = async (name, value, secret, opt = {}) => {\n  const signature = await makeSignature(value, secret);\n  value = `${value}.${signature}`;\n  value = encodeURIComponent(value);\n  return _serialize(name, value, opt);\n};\nexport {\n  parse,\n  parseSigned,\n  serialize,\n  serializeSigned\n};\n", "// src/utils/stream.ts\nvar StreamingApi = class {\n  constructor(writable) {\n    this.writable = writable;\n    this.writer = writable.getWriter();\n    this.encoder = new TextEncoder();\n  }\n  async write(input) {\n    try {\n      if (typeof input === \"string\") {\n        input = this.encoder.encode(input);\n      }\n      await this.writer.write(input);\n    } catch (e) {\n    }\n    return this;\n  }\n  async writeln(input) {\n    await this.write(input + \"\\n\");\n    return this;\n  }\n  sleep(ms) {\n    return new Promise((res) => setTimeout(res, ms));\n  }\n  async close() {\n    try {\n      await this.writer.close();\n    } catch (e) {\n    }\n  }\n  async pipe(body) {\n    this.writer.releaseLock();\n    await body.pipeTo(this.writable, { preventClose: true });\n    this.writer = this.writable.getWriter();\n  }\n};\nexport {\n  StreamingApi\n};\n", "// src/context.ts\nimport { serialize } from \"./utils/cookie.js\";\nimport { StreamingApi } from \"./utils/stream.js\";\nvar TEXT_PLAIN = \"text/plain; charset=UTF-8\";\nvar Context = class {\n  constructor(req, options) {\n    this.env = {};\n    this._var = {};\n    this.finalized = false;\n    this.error = void 0;\n    this._status = 200;\n    this._h = void 0;\n    this._pH = void 0;\n    this._init = true;\n    this._renderer = (content) => this.html(content);\n    this.notFoundHandler = () => new Response();\n    this.render = (...args) => this._renderer(...args);\n    this.setRenderer = (renderer) => {\n      this._renderer = renderer;\n    };\n    this.header = (name, value, options) => {\n      if (value === void 0) {\n        if (this._h) {\n          this._h.delete(name);\n        } else if (this._pH) {\n          delete this._pH[name.toLocaleLowerCase()];\n        }\n        if (this.finalized) {\n          this.res.headers.delete(name);\n        }\n        return;\n      }\n      if (options?.append) {\n        if (!this._h) {\n          this._init = false;\n          this._h = new Headers(this._pH);\n          this._pH = {};\n        }\n        this._h.append(name, value);\n      } else {\n        if (this._h) {\n          this._h.set(name, value);\n        } else {\n          this._pH ?? (this._pH = {});\n          this._pH[name.toLowerCase()] = value;\n        }\n      }\n      if (this.finalized) {\n        if (options?.append) {\n          this.res.headers.append(name, value);\n        } else {\n          this.res.headers.set(name, value);\n        }\n      }\n    };\n    this.status = (status) => {\n      this._init = false;\n      this._status = status;\n    };\n    this.set = (key, value) => {\n      this._var ?? (this._var = {});\n      this._var[key] = value;\n    };\n    this.get = (key) => {\n      return this._var ? this._var[key] : void 0;\n    };\n    this.newResponse = (data, arg, headers) => {\n      if (this._init && !headers && !arg && this._status === 200) {\n        return new Response(data, {\n          headers: this._pH\n        });\n      }\n      if (arg && typeof arg !== \"number\") {\n        const res = new Response(data, arg);\n        const contentType = this._pH?.[\"content-type\"];\n        if (contentType) {\n          res.headers.set(\"content-type\", contentType);\n        }\n        return res;\n      }\n      const status = arg ?? this._status;\n      this._pH ?? (this._pH = {});\n      this._h ?? (this._h = new Headers());\n      for (const [k, v] of Object.entries(this._pH)) {\n        this._h.set(k, v);\n      }\n      if (this._res) {\n        this._res.headers.forEach((v, k) => {\n          this._h?.set(k, v);\n        });\n        for (const [k, v] of Object.entries(this._pH)) {\n          this._h.set(k, v);\n        }\n      }\n      headers ?? (headers = {});\n      for (const [k, v] of Object.entries(headers)) {\n        if (typeof v === \"string\") {\n          this._h.set(k, v);\n        } else {\n          this._h.delete(k);\n          for (const v2 of v) {\n            this._h.append(k, v2);\n          }\n        }\n      }\n      return new Response(data, {\n        status,\n        headers: this._h\n      });\n    };\n    this.body = (data, arg, headers) => {\n      return typeof arg === \"number\" ? this.newResponse(data, arg, headers) : this.newResponse(data, arg);\n    };\n    this.text = (text, arg, headers) => {\n      if (!this._pH) {\n        if (this._init && !headers && !arg) {\n          return new Response(text);\n        }\n        this._pH = {};\n      }\n      if (this._pH[\"content-type\"]) {\n        this._pH[\"content-type\"] = TEXT_PLAIN;\n      }\n      return typeof arg === \"number\" ? this.newResponse(text, arg, headers) : this.newResponse(text, arg);\n    };\n    this.json = (object, arg, headers) => {\n      const body = JSON.stringify(object);\n      this._pH ?? (this._pH = {});\n      this._pH[\"content-type\"] = \"application/json; charset=UTF-8\";\n      return typeof arg === \"number\" ? this.newResponse(body, arg, headers) : this.newResponse(body, arg);\n    };\n    this.jsonT = (object, arg, headers) => {\n      const response = typeof arg === \"number\" ? this.json(object, arg, headers) : this.json(object, arg);\n      return {\n        response,\n        data: object,\n        format: \"json\",\n        status: response.status\n      };\n    };\n    this.html = (html, arg, headers) => {\n      this._pH ?? (this._pH = {});\n      this._pH[\"content-type\"] = \"text/html; charset=UTF-8\";\n      if (typeof html === \"object\") {\n        if (!(html instanceof Promise)) {\n          html = html.toString();\n        }\n        if (html instanceof Promise) {\n          return html.then((html2) => {\n            return typeof arg === \"number\" ? this.newResponse(html2, arg, headers) : this.newResponse(html2, arg);\n          });\n        }\n      }\n      return typeof arg === \"number\" ? this.newResponse(html, arg, headers) : this.newResponse(html, arg);\n    };\n    this.redirect = (location, status = 302) => {\n      this._h ?? (this._h = new Headers());\n      this._h.set(\"Location\", location);\n      return this.newResponse(null, status);\n    };\n    this.streamText = (cb, arg, headers) => {\n      headers ?? (headers = {});\n      this.header(\"content-type\", TEXT_PLAIN);\n      this.header(\"x-content-type-options\", \"nosniff\");\n      this.header(\"transfer-encoding\", \"chunked\");\n      return this.stream(cb, arg, headers);\n    };\n    this.stream = (cb, arg, headers) => {\n      const { readable, writable } = new TransformStream();\n      const stream = new StreamingApi(writable);\n      cb(stream).finally(() => stream.close());\n      return typeof arg === \"number\" ? this.newResponse(readable, arg, headers) : this.newResponse(readable, arg);\n    };\n    this.cookie = (name, value, opt) => {\n      const cookie = serialize(name, value, opt);\n      this.header(\"set-cookie\", cookie, { append: true });\n    };\n    this.notFound = () => {\n      return this.notFoundHandler(this);\n    };\n    this.req = req;\n    if (options) {\n      this._exCtx = options.executionCtx;\n      this.env = options.env;\n      if (options.notFoundHandler) {\n        this.notFoundHandler = options.notFoundHandler;\n      }\n    }\n  }\n  get event() {\n    if (this._exCtx && \"respondWith\" in this._exCtx) {\n      return this._exCtx;\n    } else {\n      throw Error(\"This context has no FetchEvent\");\n    }\n  }\n  get executionCtx() {\n    if (this._exCtx) {\n      return this._exCtx;\n    } else {\n      throw Error(\"This context has no ExecutionContext\");\n    }\n  }\n  get res() {\n    this._init = false;\n    return this._res || (this._res = new Response(\"404 Not Found\", { status: 404 }));\n  }\n  set res(_res) {\n    this._init = false;\n    if (this._res && _res) {\n      this._res.headers.delete(\"content-type\");\n      this._res.headers.forEach((v, k) => {\n        _res.headers.set(k, v);\n      });\n    }\n    this._res = _res;\n    this.finalized = true;\n  }\n  get var() {\n    return { ...this._var };\n  }\n  get runtime() {\n    const global = globalThis;\n    if (global?.Deno !== void 0) {\n      return \"deno\";\n    }\n    if (global?.Bun !== void 0) {\n      return \"bun\";\n    }\n    if (typeof global?.WebSocketPair === \"function\") {\n      return \"workerd\";\n    }\n    if (typeof global?.EdgeRuntime === \"string\") {\n      return \"edge-light\";\n    }\n    if (global?.fastly !== void 0) {\n      return \"fastly\";\n    }\n    if (global?.__lagon__ !== void 0) {\n      return \"lagon\";\n    }\n    if (global?.process?.release?.name === \"node\") {\n      return \"node\";\n    }\n    return \"other\";\n  }\n};\nexport {\n  Context\n};\n", "// src/compose.ts\nimport { Context } from \"./context.js\";\nvar compose = (middleware, onError, onNotFound) => {\n  return (context, next) => {\n    let index = -1;\n    return dispatch(0);\n    async function dispatch(i) {\n      if (i <= index) {\n        throw new Error(\"next() called multiple times\");\n      }\n      index = i;\n      let res;\n      let isError = false;\n      let handler;\n      if (middleware[i]) {\n        handler = middleware[i][0];\n        if (context instanceof Context) {\n          context.req.setParams(middleware[i][1]);\n        }\n      } else {\n        handler = i === middleware.length && next || void 0;\n      }\n      if (!handler) {\n        if (context instanceof Context && context.finalized === false && onNotFound) {\n          res = await onNotFound(context);\n        }\n      } else {\n        try {\n          res = await handler(context, () => {\n            return dispatch(i + 1);\n          });\n        } catch (err) {\n          if (err instanceof Error && context instanceof Context && onError) {\n            context.error = err;\n            res = await onError(err, context);\n            isError = true;\n          } else {\n            throw err;\n          }\n        }\n      }\n      if (res !== void 0 && \"response\" in res) {\n        res = res[\"response\"];\n      }\n      if (res && (context.finalized === false || isError)) {\n        context.res = res;\n      }\n      return context;\n    }\n  };\n};\nexport {\n  compose\n};\n", "// src/http-exception.ts\nvar HTTPException = class extends Error {\n  constructor(status = 500, options) {\n    super(options?.message);\n    this.res = options?.res;\n    this.status = status;\n  }\n  getResponse() {\n    if (this.res) {\n      return this.res;\n    }\n    return new Response(this.message, {\n      status: this.status\n    });\n  }\n};\nexport {\n  HTTPException\n};\n", "// src/utils/body.ts\nvar isArrayField = (value) => {\n  return Array.isArray(value);\n};\nvar parseBody = async (request, options = {\n  all: false\n}) => {\n  let body = {};\n  const contentType = request.headers.get(\"Content-Type\");\n  if (contentType && (contentType.startsWith(\"multipart/form-data\") || contentType.startsWith(\"application/x-www-form-urlencoded\"))) {\n    const formData = await request.formData();\n    if (formData) {\n      const form = {};\n      formData.forEach((value, key) => {\n        const shouldParseAllValues = options.all || key.slice(-2) === \"[]\";\n        if (!shouldParseAllValues) {\n          form[key] = value;\n          return;\n        }\n        if (form[key] && isArrayField(form[key])) {\n          ;\n          form[key].push(value);\n          return;\n        }\n        if (form[key]) {\n          form[key] = [form[key], value];\n          return;\n        }\n        form[key] = value;\n      });\n      body = form;\n    }\n  }\n  return body;\n};\nexport {\n  parseBody\n};\n", "// src/request.ts\nimport { parseBody } from \"./utils/body.js\";\nimport { parse } from \"./utils/cookie.js\";\nimport { getQueryParam, getQueryParams, decodeURIComponent_ } from \"./utils/url.js\";\nvar HonoRequest = class {\n  constructor(request, path = \"/\", paramStash = void 0) {\n    this._p = {};\n    this.bodyCache = {};\n    this.cachedBody = (key) => {\n      const { bodyCache, raw } = this;\n      const cachedBody = bodyCache[key];\n      if (cachedBody)\n        return cachedBody;\n      if (bodyCache.arrayBuffer) {\n        return (async () => {\n          return await new Response(bodyCache.arrayBuffer)[key]();\n        })();\n      }\n      return bodyCache[key] = raw[key]();\n    };\n    this.raw = request;\n    this.path = path;\n    this._s = paramStash;\n    this.vData = {};\n  }\n  setParams(params) {\n    this._p = params;\n  }\n  param(key) {\n    if (key) {\n      const param = this._s ? this._s[this._p[key]] : this._p[key];\n      return param ? /\\%/.test(param) ? decodeURIComponent_(param) : param : void 0;\n    } else {\n      const decoded = {};\n      const keys = Object.keys(this._p);\n      for (let i = 0, len = keys.length; i < len; i++) {\n        const key2 = keys[i];\n        const value = this._s ? this._s[this._p[key2]] : this._p[key2];\n        if (value && typeof value === \"string\") {\n          decoded[key2] = /\\%/.test(value) ? decodeURIComponent_(value) : value;\n        }\n      }\n      return decoded;\n    }\n  }\n  query(key) {\n    return getQueryParam(this.url, key);\n  }\n  queries(key) {\n    return getQueryParams(this.url, key);\n  }\n  header(name) {\n    if (name)\n      return this.raw.headers.get(name.toLowerCase()) ?? void 0;\n    const headerData = {};\n    this.raw.headers.forEach((value, key) => {\n      headerData[key] = value;\n    });\n    return headerData;\n  }\n  cookie(key) {\n    const cookie = this.raw.headers.get(\"Cookie\");\n    if (!cookie)\n      return;\n    const obj = parse(cookie);\n    if (key) {\n      const value = obj[key];\n      return value;\n    } else {\n      return obj;\n    }\n  }\n  async parseBody(options) {\n    if (this.bodyCache.parsedBody)\n      return this.bodyCache.parsedBody;\n    const parsedBody = await parseBody(this, options);\n    this.bodyCache.parsedBody = parsedBody;\n    return parsedBody;\n  }\n  json() {\n    return this.cachedBody(\"json\");\n  }\n  text() {\n    return this.cachedBody(\"text\");\n  }\n  arrayBuffer() {\n    return this.cachedBody(\"arrayBuffer\");\n  }\n  blob() {\n    return this.cachedBody(\"blob\");\n  }\n  formData() {\n    return this.cachedBody(\"formData\");\n  }\n  addValidatedData(target, data) {\n    this.vData[target] = data;\n  }\n  valid(target) {\n    return this.vData[target];\n  }\n  get url() {\n    return this.raw.url;\n  }\n  get method() {\n    return this.raw.method;\n  }\n  get headers() {\n    return this.raw.headers;\n  }\n  get body() {\n    return this.raw.body;\n  }\n  get bodyUsed() {\n    return this.raw.bodyUsed;\n  }\n  get integrity() {\n    return this.raw.integrity;\n  }\n  get keepalive() {\n    return this.raw.keepalive;\n  }\n  get referrer() {\n    return this.raw.referrer;\n  }\n  get signal() {\n    return this.raw.signal;\n  }\n};\nexport {\n  HonoRequest\n};\n", "// src/router.ts\nvar METHOD_NAME_ALL = \"ALL\";\nvar METHOD_NAME_ALL_LOWERCASE = \"all\";\nvar METHODS = [\"get\", \"post\", \"put\", \"delete\", \"options\", \"patch\"];\nvar UnsupportedPathError = class extends Error {\n};\nexport {\n  METHODS,\n  METHOD_NAME_ALL,\n  METHOD_NAME_ALL_LOWERCASE,\n  UnsupportedPathError\n};\n", "// src/hono-base.ts\nimport { compose } from \"./compose.js\";\nimport { Context } from \"./context.js\";\nimport { HTTPException } from \"./http-exception.js\";\nimport { HonoRequest } from \"./request.js\";\nimport { METHOD_NAME_ALL, METHOD_NAME_ALL_LOWERCASE, METHODS } from \"./router.js\";\nimport { getPath, getPathNoStrict, getQueryStrings, mergePath } from \"./utils/url.js\";\nfunction defineDynamicClass() {\n  return class {\n  };\n}\nvar notFoundHandler = (c) => {\n  return c.text(\"404 Not Found\", 404);\n};\nvar errorHandler = (err, c) => {\n  if (err instanceof HTTPException) {\n    return err.getResponse();\n  }\n  console.error(err);\n  const message = \"Internal Server Error\";\n  return c.text(message, 500);\n};\nvar Hono = class extends defineDynamicClass() {\n  constructor(options = {}) {\n    super();\n    this._basePath = \"/\";\n    this.path = \"/\";\n    this.routes = [];\n    this.notFoundHandler = notFoundHandler;\n    this.errorHandler = errorHandler;\n    this.head = () => {\n      console.warn(\"`app.head()` is no longer used. `app.get()` implicitly handles the HEAD method.\");\n      return this;\n    };\n    this.handleEvent = (event) => {\n      return this.dispatch(event.request, event, void 0, event.request.method);\n    };\n    this.fetch = (request, Env, executionCtx) => {\n      return this.dispatch(request, executionCtx, Env, request.method);\n    };\n    this.request = (input, requestInit, Env, executionCtx) => {\n      if (input instanceof Request) {\n        if (requestInit !== void 0) {\n          input = new Request(input, requestInit);\n        }\n        return this.fetch(input, Env, executionCtx);\n      }\n      input = input.toString();\n      const path = /^https?:\\/\\//.test(input) ? input : `http://localhost${mergePath(\"/\", input)}`;\n      const req = new Request(path, requestInit);\n      return this.fetch(req, Env, executionCtx);\n    };\n    this.fire = () => {\n      addEventListener(\"fetch\", (event) => {\n        event.respondWith(this.dispatch(event.request, event, void 0, event.request.method));\n      });\n    };\n    const allMethods = [...METHODS, METHOD_NAME_ALL_LOWERCASE];\n    allMethods.map((method) => {\n      this[method] = (args1, ...args) => {\n        if (typeof args1 === \"string\") {\n          this.path = args1;\n        } else {\n          this.addRoute(method, this.path, args1);\n        }\n        args.map((handler) => {\n          if (typeof handler !== \"string\") {\n            this.addRoute(method, this.path, handler);\n          }\n        });\n        return this;\n      };\n    });\n    this.on = (method, path, ...handlers) => {\n      if (!method)\n        return this;\n      this.path = path;\n      for (const m of [method].flat()) {\n        handlers.map((handler) => {\n          this.addRoute(m.toUpperCase(), this.path, handler);\n        });\n      }\n      return this;\n    };\n    this.use = (arg1, ...handlers) => {\n      if (typeof arg1 === \"string\") {\n        this.path = arg1;\n      } else {\n        handlers.unshift(arg1);\n      }\n      handlers.map((handler) => {\n        this.addRoute(METHOD_NAME_ALL, this.path, handler);\n      });\n      return this;\n    };\n    const strict = options.strict ?? true;\n    delete options.strict;\n    Object.assign(this, options);\n    this.getPath = strict ? options.getPath ?? getPath : getPathNoStrict;\n  }\n  clone() {\n    const clone = new Hono({\n      router: this.router,\n      getPath: this.getPath\n    });\n    clone.routes = this.routes;\n    return clone;\n  }\n  route(path, app) {\n    const subApp = this.basePath(path);\n    if (!app) {\n      return subApp;\n    }\n    app.routes.map((r) => {\n      const handler = app.errorHandler === errorHandler ? r.handler : async (c, next) => (await compose([], app.errorHandler)(c, () => r.handler(c, next))).res;\n      subApp.addRoute(r.method, r.path, handler);\n    });\n    return this;\n  }\n  basePath(path) {\n    const subApp = this.clone();\n    subApp._basePath = mergePath(this._basePath, path);\n    return subApp;\n  }\n  onError(handler) {\n    this.errorHandler = handler;\n    return this;\n  }\n  notFound(handler) {\n    this.notFoundHandler = handler;\n    return this;\n  }\n  showRoutes() {\n    const length = 8;\n    this.routes.map((route) => {\n      console.log(\n        `\\x1B[32m${route.method}\\x1B[0m ${\" \".repeat(length - route.method.length)} ${route.path}`\n      );\n    });\n  }\n  mount(path, applicationHandler, optionHandler) {\n    const mergedPath = mergePath(this._basePath, path);\n    const pathPrefixLength = mergedPath === \"/\" ? 0 : mergedPath.length;\n    const handler = async (c, next) => {\n      let executionContext = void 0;\n      try {\n        executionContext = c.executionCtx;\n      } catch {\n      }\n      const options = optionHandler ? optionHandler(c) : [c.env, executionContext];\n      const optionsArray = Array.isArray(options) ? options : [options];\n      const queryStrings = getQueryStrings(c.req.url);\n      const res = await applicationHandler(\n        new Request(\n          new URL((c.req.path.slice(pathPrefixLength) || \"/\") + queryStrings, c.req.url),\n          c.req.raw\n        ),\n        ...optionsArray\n      );\n      if (res)\n        return res;\n      await next();\n    };\n    this.addRoute(METHOD_NAME_ALL, mergePath(path, \"*\"), handler);\n    return this;\n  }\n  get routerName() {\n    this.matchRoute(\"GET\", \"/\");\n    return this.router.name;\n  }\n  addRoute(method, path, handler) {\n    method = method.toUpperCase();\n    path = mergePath(this._basePath, path);\n    this.router.add(method, path, handler);\n    const r = { path, method, handler };\n    this.routes.push(r);\n  }\n  matchRoute(method, path) {\n    return this.router.match(method, path);\n  }\n  handleError(err, c) {\n    if (err instanceof Error) {\n      return this.errorHandler(err, c);\n    }\n    throw err;\n  }\n  dispatch(request, executionCtx, env, method) {\n    if (method === \"HEAD\") {\n      return (async () => new Response(null, await this.dispatch(request, executionCtx, env, \"GET\")))();\n    }\n    const path = this.getPath(request, { env });\n    const [handlers, paramStash] = this.matchRoute(method, path);\n    const c = new Context(new HonoRequest(request, path, paramStash), {\n      env,\n      executionCtx,\n      notFoundHandler: this.notFoundHandler\n    });\n    if (handlers.length === 1) {\n      let res;\n      c.req.setParams(handlers[0][1]);\n      try {\n        res = handlers[0][0](c, async () => {\n        });\n        if (!res) {\n          return this.notFoundHandler(c);\n        }\n      } catch (err) {\n        return this.handleError(err, c);\n      }\n      if (res instanceof Response)\n        return res;\n      if (\"response\" in res) {\n        res = res.response;\n      }\n      if (res instanceof Response)\n        return res;\n      return (async () => {\n        let awaited;\n        try {\n          awaited = await res;\n          if (awaited !== void 0 && \"response\" in awaited) {\n            awaited = awaited[\"response\"];\n          }\n          if (!awaited) {\n            return this.notFoundHandler(c);\n          }\n        } catch (err) {\n          return this.handleError(err, c);\n        }\n        return awaited;\n      })();\n    }\n    const composed = compose(handlers, this.errorHandler, this.notFoundHandler);\n    return (async () => {\n      try {\n        const context = await composed(c);\n        if (!context.finalized) {\n          throw new Error(\n            \"Context is not finalized. You may forget returning Response object or `await next()`\"\n          );\n        }\n        return context.res;\n      } catch (err) {\n        return this.handleError(err, c);\n      }\n    })();\n  }\n};\nexport {\n  Hono as HonoBase\n};\n", "// src/router/reg-exp-router/node.ts\nvar LABEL_REG_EXP_STR = \"[^/]+\";\nvar ONLY_WILDCARD_REG_EXP_STR = \".*\";\nvar TAIL_WILDCARD_REG_EXP_STR = \"(?:|/.*)\";\nvar PATH_ERROR = Symbol();\nfunction compareKey(a, b) {\n  if (a.length === 1) {\n    return b.length === 1 ? a < b ? -1 : 1 : -1;\n  }\n  if (b.length === 1) {\n    return 1;\n  }\n  if (a === ONLY_WILDCARD_REG_EXP_STR || a === TAIL_WILDCARD_REG_EXP_STR) {\n    return 1;\n  } else if (b === ONLY_WILDCARD_REG_EXP_STR || b === TAIL_WILDCARD_REG_EXP_STR) {\n    return -1;\n  }\n  if (a === LABEL_REG_EXP_STR) {\n    return 1;\n  } else if (b === LABEL_REG_EXP_STR) {\n    return -1;\n  }\n  return a.length === b.length ? a < b ? -1 : 1 : b.length - a.length;\n}\nvar Node = class {\n  constructor() {\n    this.children = {};\n  }\n  insert(tokens, index, paramMap, context, pathErrorCheckOnly) {\n    if (tokens.length === 0) {\n      if (this.index !== void 0) {\n        throw PATH_ERROR;\n      }\n      if (pathErrorCheckOnly) {\n        return;\n      }\n      this.index = index;\n      return;\n    }\n    const [token, ...restTokens] = tokens;\n    const pattern = token === \"*\" ? restTokens.length === 0 ? [\"\", \"\", ONLY_WILDCARD_REG_EXP_STR] : [\"\", \"\", LABEL_REG_EXP_STR] : token === \"/*\" ? [\"\", \"\", TAIL_WILDCARD_REG_EXP_STR] : token.match(/^\\:([^\\{\\}]+)(?:\\{(.+)\\})?$/);\n    let node;\n    if (pattern) {\n      const name = pattern[1];\n      let regexpStr = pattern[2] || LABEL_REG_EXP_STR;\n      if (name && pattern[2]) {\n        regexpStr = regexpStr.replace(/^\\((?!\\?:)(?=[^)]+\\)$)/, \"(?:\");\n        if (/\\((?!\\?:)/.test(regexpStr)) {\n          throw PATH_ERROR;\n        }\n      }\n      node = this.children[regexpStr];\n      if (!node) {\n        if (Object.keys(this.children).some(\n          (k) => k !== ONLY_WILDCARD_REG_EXP_STR && k !== TAIL_WILDCARD_REG_EXP_STR\n        )) {\n          throw PATH_ERROR;\n        }\n        if (pathErrorCheckOnly) {\n          return;\n        }\n        node = this.children[regexpStr] = new Node();\n        if (name !== \"\") {\n          node.varIndex = context.varIndex++;\n        }\n      }\n      if (!pathErrorCheckOnly && name !== \"\") {\n        paramMap.push([name, node.varIndex]);\n      }\n    } else {\n      node = this.children[token];\n      if (!node) {\n        if (Object.keys(this.children).some(\n          (k) => k.length > 1 && k !== ONLY_WILDCARD_REG_EXP_STR && k !== TAIL_WILDCARD_REG_EXP_STR\n        )) {\n          throw PATH_ERROR;\n        }\n        if (pathErrorCheckOnly) {\n          return;\n        }\n        node = this.children[token] = new Node();\n      }\n    }\n    node.insert(restTokens, index, paramMap, context, pathErrorCheckOnly);\n  }\n  buildRegExpStr() {\n    const childKeys = Object.keys(this.children).sort(compareKey);\n    const strList = childKeys.map((k) => {\n      const c = this.children[k];\n      return (typeof c.varIndex === \"number\" ? `(${k})@${c.varIndex}` : k) + c.buildRegExpStr();\n    });\n    if (typeof this.index === \"number\") {\n      strList.unshift(`#${this.index}`);\n    }\n    if (strList.length === 0) {\n      return \"\";\n    }\n    if (strList.length === 1) {\n      return strList[0];\n    }\n    return \"(?:\" + strList.join(\"|\") + \")\";\n  }\n};\nexport {\n  Node,\n  PATH_ERROR\n};\n", "// src/router/reg-exp-router/trie.ts\nimport { Node } from \"./node.js\";\nvar Trie = class {\n  constructor() {\n    this.context = { varIndex: 0 };\n    this.root = new Node();\n  }\n  insert(path, index, pathErrorCheckOnly) {\n    const paramAssoc = [];\n    const groups = [];\n    for (let i = 0; ; ) {\n      let replaced = false;\n      path = path.replace(/\\{[^}]+\\}/g, (m) => {\n        const mark = `@\\\\${i}`;\n        groups[i] = [mark, m];\n        i++;\n        replaced = true;\n        return mark;\n      });\n      if (!replaced) {\n        break;\n      }\n    }\n    const tokens = path.match(/(?::[^\\/]+)|(?:\\/\\*$)|./g) || [];\n    for (let i = groups.length - 1; i >= 0; i--) {\n      const [mark] = groups[i];\n      for (let j = tokens.length - 1; j >= 0; j--) {\n        if (tokens[j].indexOf(mark) !== -1) {\n          tokens[j] = tokens[j].replace(mark, groups[i][1]);\n          break;\n        }\n      }\n    }\n    this.root.insert(tokens, index, paramAssoc, this.context, pathErrorCheckOnly);\n    return paramAssoc;\n  }\n  buildRegExp() {\n    let regexp = this.root.buildRegExpStr();\n    if (regexp === \"\") {\n      return [/^$/, [], []];\n    }\n    let captureIndex = 0;\n    const indexReplacementMap = [];\n    const paramReplacementMap = [];\n    regexp = regexp.replace(/#(\\d+)|@(\\d+)|\\.\\*\\$/g, (_, handlerIndex, paramIndex) => {\n      if (typeof handlerIndex !== \"undefined\") {\n        indexReplacementMap[++captureIndex] = Number(handlerIndex);\n        return \"$()\";\n      }\n      if (typeof paramIndex !== \"undefined\") {\n        paramReplacementMap[Number(paramIndex)] = ++captureIndex;\n        return \"\";\n      }\n      return \"\";\n    });\n    return [new RegExp(`^${regexp}`), indexReplacementMap, paramReplacementMap];\n  }\n};\nexport {\n  Trie\n};\n", "// src/router/reg-exp-router/router.ts\nimport { METHOD_NAME_ALL, METHODS, UnsupportedPathError } from \"../../router.js\";\nimport { checkOptionalParameter } from \"../../utils/url.js\";\nimport { PATH_ERROR } from \"./node.js\";\nimport { Trie } from \"./trie.js\";\nvar methodNames = [METHOD_NAME_ALL, ...METHODS].map((method) => method.toUpperCase());\nvar emptyParam = [];\nvar nullMatcher = [/^$/, [], {}];\nvar wildcardRegExpCache = {};\nfunction buildWildcardRegExp(path) {\n  return wildcardRegExpCache[path] ?? (wildcardRegExpCache[path] = new RegExp(\n    path === \"*\" ? \"\" : `^${path.replace(/\\/\\*/, \"(?:|/.*)\")}$`\n  ));\n}\nfunction clearWildcardRegExpCache() {\n  wildcardRegExpCache = {};\n}\nfunction buildMatcherFromPreprocessedRoutes(routes) {\n  const trie = new Trie();\n  const handlerData = [];\n  if (routes.length === 0) {\n    return nullMatcher;\n  }\n  const routesWithStaticPathFlag = routes.map(\n    (route) => [!/\\*|\\/:/.test(route[0]), ...route]\n  ).sort(\n    ([isStaticA, pathA], [isStaticB, pathB]) => isStaticA ? 1 : isStaticB ? -1 : pathA.length - pathB.length\n  );\n  const staticMap = {};\n  for (let i = 0, j = -1, len = routesWithStaticPathFlag.length; i < len; i++) {\n    const [pathErrorCheckOnly, path, handlers] = routesWithStaticPathFlag[i];\n    if (pathErrorCheckOnly) {\n      staticMap[path] = [handlers.map(([h]) => [h, {}]), emptyParam];\n    } else {\n      j++;\n    }\n    let paramAssoc;\n    try {\n      paramAssoc = trie.insert(path, j, pathErrorCheckOnly);\n    } catch (e) {\n      throw e === PATH_ERROR ? new UnsupportedPathError(path) : e;\n    }\n    if (pathErrorCheckOnly) {\n      continue;\n    }\n    handlerData[j] = handlers.map(([h, paramCount]) => {\n      const paramIndexMap = {};\n      paramCount -= 1;\n      for (; paramCount >= 0; paramCount--) {\n        const [key, value] = paramAssoc[paramCount];\n        paramIndexMap[key] = value;\n      }\n      return [h, paramIndexMap];\n    });\n  }\n  const [regexp, indexReplacementMap, paramReplacementMap] = trie.buildRegExp();\n  for (let i = 0, len = handlerData.length; i < len; i++) {\n    for (let j = 0, len2 = handlerData[i].length; j < len2; j++) {\n      const map = handlerData[i][j]?.[1];\n      if (!map) {\n        continue;\n      }\n      const keys = Object.keys(map);\n      for (let k = 0, len3 = keys.length; k < len3; k++) {\n        map[keys[k]] = paramReplacementMap[map[keys[k]]];\n      }\n    }\n  }\n  const handlerMap = [];\n  for (const i in indexReplacementMap) {\n    handlerMap[i] = handlerData[indexReplacementMap[i]];\n  }\n  return [regexp, handlerMap, staticMap];\n}\nfunction findMiddleware(middleware, path) {\n  if (!middleware) {\n    return void 0;\n  }\n  for (const k of Object.keys(middleware).sort((a, b) => b.length - a.length)) {\n    if (buildWildcardRegExp(k).test(path)) {\n      return [...middleware[k]];\n    }\n  }\n  return void 0;\n}\nvar RegExpRouter = class {\n  constructor() {\n    this.name = \"RegExpRouter\";\n    this.middleware = { [METHOD_NAME_ALL]: {} };\n    this.routes = { [METHOD_NAME_ALL]: {} };\n  }\n  add(method, path, handler) {\n    var _a;\n    const { middleware, routes } = this;\n    if (!middleware || !routes) {\n      throw new Error(\"Can not add a route since the matcher is already built.\");\n    }\n    if (methodNames.indexOf(method) === -1)\n      methodNames.push(method);\n    if (!middleware[method]) {\n      ;\n      [middleware, routes].forEach((handlerMap) => {\n        handlerMap[method] = {};\n        Object.keys(handlerMap[METHOD_NAME_ALL]).forEach((p) => {\n          handlerMap[method][p] = [...handlerMap[METHOD_NAME_ALL][p]];\n        });\n      });\n    }\n    if (path === \"/*\") {\n      path = \"*\";\n    }\n    const paramCount = (path.match(/\\/:/g) || []).length;\n    if (/\\*$/.test(path)) {\n      const re = buildWildcardRegExp(path);\n      if (method === METHOD_NAME_ALL) {\n        Object.keys(middleware).forEach((m) => {\n          var _a2;\n          (_a2 = middleware[m])[path] || (_a2[path] = findMiddleware(middleware[m], path) || findMiddleware(middleware[METHOD_NAME_ALL], path) || []);\n        });\n      } else {\n        (_a = middleware[method])[path] || (_a[path] = findMiddleware(middleware[method], path) || findMiddleware(middleware[METHOD_NAME_ALL], path) || []);\n      }\n      Object.keys(middleware).forEach((m) => {\n        if (method === METHOD_NAME_ALL || method === m) {\n          Object.keys(middleware[m]).forEach((p) => {\n            re.test(p) && middleware[m][p].push([handler, paramCount]);\n          });\n        }\n      });\n      Object.keys(routes).forEach((m) => {\n        if (method === METHOD_NAME_ALL || method === m) {\n          Object.keys(routes[m]).forEach(\n            (p) => re.test(p) && routes[m][p].push([handler, paramCount])\n          );\n        }\n      });\n      return;\n    }\n    const paths = checkOptionalParameter(path) || [path];\n    for (let i = 0, len = paths.length; i < len; i++) {\n      const path2 = paths[i];\n      Object.keys(routes).forEach((m) => {\n        var _a2;\n        if (method === METHOD_NAME_ALL || method === m) {\n          (_a2 = routes[m])[path2] || (_a2[path2] = [\n            ...findMiddleware(middleware[m], path2) || findMiddleware(middleware[METHOD_NAME_ALL], path2) || []\n          ]);\n          routes[m][path2].push([\n            handler,\n            paths.length === 2 && i === 0 ? paramCount - 1 : paramCount\n          ]);\n        }\n      });\n    }\n  }\n  match(method, path) {\n    clearWildcardRegExpCache();\n    const matchers = this.buildAllMatchers();\n    this.match = (method2, path2) => {\n      const matcher = matchers[method2];\n      const staticMatch = matcher[2][path2];\n      if (staticMatch) {\n        return staticMatch;\n      }\n      const match = path2.match(matcher[0]);\n      if (!match) {\n        return [[], emptyParam];\n      }\n      const index = match.indexOf(\"\", 1);\n      return [matcher[1][index], match];\n    };\n    return this.match(method, path);\n  }\n  buildAllMatchers() {\n    const matchers = {};\n    methodNames.forEach((method) => {\n      matchers[method] = this.buildMatcher(method) || matchers[METHOD_NAME_ALL];\n    });\n    this.middleware = this.routes = void 0;\n    return matchers;\n  }\n  buildMatcher(method) {\n    const routes = [];\n    let hasOwnRoute = method === METHOD_NAME_ALL;\n    [this.middleware, this.routes].forEach((r) => {\n      const ownRoute = r[method] ? Object.keys(r[method]).map((path) => [path, r[method][path]]) : [];\n      if (ownRoute.length !== 0) {\n        hasOwnRoute || (hasOwnRoute = true);\n        routes.push(...ownRoute);\n      } else if (method !== METHOD_NAME_ALL) {\n        routes.push(\n          ...Object.keys(r[METHOD_NAME_ALL]).map((path) => [path, r[METHOD_NAME_ALL][path]])\n        );\n      }\n    });\n    if (!hasOwnRoute) {\n      return null;\n    } else {\n      return buildMatcherFromPreprocessedRoutes(routes);\n    }\n  }\n};\nexport {\n  RegExpRouter\n};\n", "// src/router/smart-router/router.ts\nimport { UnsupportedPathError } from \"../../router.js\";\nvar SmartRouter = class {\n  constructor(init) {\n    this.name = \"SmartRouter\";\n    this.routers = [];\n    this.routes = [];\n    Object.assign(this, init);\n  }\n  add(method, path, handler) {\n    if (!this.routes) {\n      throw new Error(\"Can not add a route since the matcher is already built.\");\n    }\n    this.routes.push([method, path, handler]);\n  }\n  match(method, path) {\n    if (!this.routes) {\n      throw new Error(\"Fatal error\");\n    }\n    const { routers, routes } = this;\n    const len = routers.length;\n    let i = 0;\n    let res;\n    for (; i < len; i++) {\n      const router = routers[i];\n      try {\n        routes.forEach((args) => {\n          router.add(...args);\n        });\n        res = router.match(method, path);\n      } catch (e) {\n        if (e instanceof UnsupportedPathError) {\n          continue;\n        }\n        throw e;\n      }\n      this.match = router.match.bind(router);\n      this.routers = [router];\n      this.routes = void 0;\n      break;\n    }\n    if (i === len) {\n      throw new Error(\"Fatal error\");\n    }\n    this.name = `SmartRouter + ${this.activeRouter.name}`;\n    return res;\n  }\n  get activeRouter() {\n    if (this.routes || this.routers.length !== 1) {\n      throw new Error(\"No active router has been determined yet.\");\n    }\n    return this.routers[0];\n  }\n};\nexport {\n  SmartRouter\n};\n", "// src/router/trie-router/node.ts\nimport { METHOD_NAME_ALL } from \"../../router.js\";\nimport { splitPath, splitRoutingPath, getPattern } from \"../../utils/url.js\";\nvar Node = class {\n  constructor(method, handler, children) {\n    this.order = 0;\n    this.params = {};\n    this.children = children || {};\n    this.methods = [];\n    this.name = \"\";\n    if (method && handler) {\n      const m = {};\n      m[method] = { handler, params: {}, possibleKeys: [], score: 0, name: this.name };\n      this.methods = [m];\n    }\n    this.patterns = [];\n  }\n  insert(method, path, handler) {\n    this.name = `${method} ${path}`;\n    this.order = ++this.order;\n    let curNode = this;\n    const parts = splitRoutingPath(path);\n    const possibleKeys = [];\n    const parentPatterns = [];\n    for (let i = 0, len = parts.length; i < len; i++) {\n      const p = parts[i];\n      if (Object.keys(curNode.children).includes(p)) {\n        parentPatterns.push(...curNode.patterns);\n        curNode = curNode.children[p];\n        const pattern2 = getPattern(p);\n        if (pattern2)\n          possibleKeys.push(pattern2[1]);\n        continue;\n      }\n      curNode.children[p] = new Node();\n      const pattern = getPattern(p);\n      if (pattern) {\n        curNode.patterns.push(pattern);\n        parentPatterns.push(...curNode.patterns);\n        possibleKeys.push(pattern[1]);\n      }\n      parentPatterns.push(...curNode.patterns);\n      curNode = curNode.children[p];\n    }\n    if (!curNode.methods.length) {\n      curNode.methods = [];\n    }\n    const m = {};\n    const handlerSet = {\n      handler,\n      params: {},\n      possibleKeys,\n      name: this.name,\n      score: this.order\n    };\n    m[method] = handlerSet;\n    curNode.methods.push(m);\n    return curNode;\n  }\n  gHSets(node, method, params) {\n    const handlerSets = [];\n    for (let i = 0, len = node.methods.length; i < len; i++) {\n      const m = node.methods[i];\n      const handlerSet = m[method] || m[METHOD_NAME_ALL];\n      if (handlerSet !== void 0) {\n        handlerSet.possibleKeys.map((key) => {\n          handlerSet.params[key] = params[key];\n        });\n        handlerSets.push(handlerSet);\n      }\n    }\n    return handlerSets;\n  }\n  search(method, path) {\n    const handlerSets = [];\n    const params = {};\n    this.params = {};\n    const curNode = this;\n    let curNodes = [curNode];\n    const parts = splitPath(path);\n    for (let i = 0, len = parts.length; i < len; i++) {\n      const part = parts[i];\n      const isLast = i === len - 1;\n      const tempNodes = [];\n      for (let j = 0, len2 = curNodes.length; j < len2; j++) {\n        const node = curNodes[j];\n        const nextNode = node.children[part];\n        if (nextNode) {\n          if (isLast === true) {\n            if (nextNode.children[\"*\"]) {\n              handlerSets.push(\n                ...this.gHSets(nextNode.children[\"*\"], method, { ...params, ...node.params })\n              );\n            }\n            handlerSets.push(...this.gHSets(nextNode, method, { ...params, ...node.params }));\n          } else {\n            tempNodes.push(nextNode);\n          }\n        }\n        for (let k = 0, len3 = node.patterns.length; k < len3; k++) {\n          const pattern = node.patterns[k];\n          if (pattern === \"*\") {\n            const astNode = node.children[\"*\"];\n            if (astNode) {\n              handlerSets.push(...this.gHSets(astNode, method, { ...params, ...node.params }));\n              tempNodes.push(astNode);\n            }\n            continue;\n          }\n          if (part === \"\")\n            continue;\n          const [key, name, matcher] = pattern;\n          const child = node.children[key];\n          const restPathString = parts.slice(i).join(\"/\");\n          if (matcher instanceof RegExp && matcher.test(restPathString)) {\n            params[name] = restPathString;\n            handlerSets.push(...this.gHSets(child, method, { ...params, ...node.params }));\n            continue;\n          }\n          if (matcher === true || matcher instanceof RegExp && matcher.test(part)) {\n            if (typeof key === \"string\") {\n              params[name] = part;\n              if (isLast === true) {\n                handlerSets.push(...this.gHSets(child, method, { ...params, ...node.params }));\n                if (child.children[\"*\"]) {\n                  handlerSets.push(\n                    ...this.gHSets(child.children[\"*\"], method, { ...params, ...node.params })\n                  );\n                }\n              } else {\n                child.params = { ...params };\n                tempNodes.push(child);\n              }\n            }\n          }\n        }\n      }\n      curNodes = tempNodes;\n    }\n    const results = handlerSets.sort((a, b) => {\n      return a.score - b.score;\n    });\n    return [results.map(({ handler, params: params2 }) => [handler, params2])];\n  }\n};\nexport {\n  Node\n};\n", "// src/router/trie-router/router.ts\nimport { checkOptionalParameter } from \"../../utils/url.js\";\nimport { Node } from \"./node.js\";\nvar TrieRouter = class {\n  constructor() {\n    this.name = \"TrieRouter\";\n    this.node = new Node();\n  }\n  add(method, path, handler) {\n    const results = checkOptionalParameter(path);\n    if (results) {\n      for (const p of results) {\n        this.node.insert(method, p, handler);\n      }\n      return;\n    }\n    this.node.insert(method, path, handler);\n  }\n  match(method, path) {\n    return this.node.search(method, path);\n  }\n};\nexport {\n  TrieRouter\n};\n", "// src/hono.ts\nimport { HonoBase } from \"./hono-base.js\";\nimport { RegExpRouter } from \"./router/reg-exp-router/index.js\";\nimport { SmartRouter } from \"./router/smart-router/index.js\";\nimport { TrieRouter } from \"./router/trie-router/index.js\";\nvar Hono = class extends HonoBase {\n  constructor(options = {}) {\n    super(options);\n    this.router = options.router ?? new SmartRouter({\n      routers: [new RegExpRouter(), new TrieRouter()]\n    });\n  }\n};\nexport {\n  Hono\n};\n", "// src/utils/html.ts\nimport { raw } from \"../helper/html/index.js\";\nvar escapeRe = /[&<>'\"]/;\nvar stringBufferToString = async (buffer) => {\n  let str = \"\";\n  const promises = [];\n  for (let i = buffer.length - 1; i >= 0; i--) {\n    let r = await buffer[i];\n    if (typeof r === \"object\") {\n      promises.push(...r.promises || []);\n    }\n    r = await (typeof r === \"object\" ? r.toString() : r);\n    if (typeof r === \"object\") {\n      promises.push(...r.promises || []);\n    }\n    str += r;\n  }\n  return raw(str, promises);\n};\nvar escapeToBuffer = (str, buffer) => {\n  const match = str.search(escapeRe);\n  if (match === -1) {\n    buffer[0] += str;\n    return;\n  }\n  let escape;\n  let index;\n  let lastIndex = 0;\n  for (index = match; index < str.length; index++) {\n    switch (str.charCodeAt(index)) {\n      case 34:\n        escape = \"&quot;\";\n        break;\n      case 39:\n        escape = \"&#39;\";\n        break;\n      case 38:\n        escape = \"&amp;\";\n        break;\n      case 60:\n        escape = \"&lt;\";\n        break;\n      case 62:\n        escape = \"&gt;\";\n        break;\n      default:\n        continue;\n    }\n    buffer[0] += str.substring(lastIndex, index) + escape;\n    lastIndex = index + 1;\n  }\n  buffer[0] += str.substring(lastIndex, index);\n};\nexport {\n  escapeToBuffer,\n  stringBufferToString\n};\n", "// src/helper/html/index.ts\nimport { escapeToBuffer, stringBufferToString } from \"../../utils/html.js\";\nvar raw = (value, promises) => {\n  const escapedString = new String(value);\n  escapedString.isEscaped = true;\n  escapedString.promises = promises;\n  return escapedString;\n};\nvar html = (strings, ...values) => {\n  const buffer = [\"\"];\n  for (let i = 0, len = strings.length - 1; i < len; i++) {\n    buffer[0] += strings[i];\n    const children = values[i] instanceof Array ? values[i].flat(Infinity) : [values[i]];\n    for (let i2 = 0, len2 = children.length; i2 < len2; i2++) {\n      const child = children[i2];\n      if (typeof child === \"string\") {\n        escapeToBuffer(child, buffer);\n      } else if (typeof child === \"boolean\" || child === null || child === void 0) {\n        continue;\n      } else if (typeof child === \"object\" && child.isEscaped || typeof child === \"number\") {\n        const tmp = child.toString();\n        if (tmp instanceof Promise) {\n          buffer.unshift(\"\", tmp);\n        } else {\n          buffer[0] += tmp;\n        }\n      } else {\n        escapeToBuffer(child.toString(), buffer);\n      }\n    }\n  }\n  buffer[0] += strings[strings.length - 1];\n  return buffer.length === 1 ? raw(buffer[0]) : stringBufferToString(buffer);\n};\nexport {\n  html,\n  raw\n};\n", "// src/jsx/index.ts\nimport { raw } from \"../helper/html/index.js\";\nimport { escapeToBuffer, stringBufferToString } from \"../utils/html.js\";\nvar emptyTags = [\n  \"area\",\n  \"base\",\n  \"br\",\n  \"col\",\n  \"embed\",\n  \"hr\",\n  \"img\",\n  \"input\",\n  \"keygen\",\n  \"link\",\n  \"meta\",\n  \"param\",\n  \"source\",\n  \"track\",\n  \"wbr\"\n];\nvar booleanAttributes = [\n  \"allowfullscreen\",\n  \"async\",\n  \"autofocus\",\n  \"autoplay\",\n  \"checked\",\n  \"controls\",\n  \"default\",\n  \"defer\",\n  \"disabled\",\n  \"formnovalidate\",\n  \"hidden\",\n  \"inert\",\n  \"ismap\",\n  \"itemscope\",\n  \"loop\",\n  \"multiple\",\n  \"muted\",\n  \"nomodule\",\n  \"novalidate\",\n  \"open\",\n  \"playsinline\",\n  \"readonly\",\n  \"required\",\n  \"reversed\",\n  \"selected\"\n];\nvar childrenToStringToBuffer = (children, buffer) => {\n  for (let i = 0, len = children.length; i < len; i++) {\n    const child = children[i];\n    if (typeof child === \"string\") {\n      escapeToBuffer(child, buffer);\n    } else if (typeof child === \"boolean\" || child === null || child === void 0) {\n      continue;\n    } else if (child instanceof JSXNode) {\n      child.toStringToBuffer(buffer);\n    } else if (typeof child === \"number\" || child.isEscaped) {\n      ;\n      buffer[0] += child;\n    } else if (child instanceof Promise) {\n      buffer.unshift(\"\", child);\n    } else {\n      childrenToStringToBuffer(child, buffer);\n    }\n  }\n};\nvar JSXNode = class {\n  constructor(tag, props, children) {\n    this.isEscaped = true;\n    this.tag = tag;\n    this.props = props;\n    this.children = children;\n  }\n  toString() {\n    const buffer = [\"\"];\n    this.toStringToBuffer(buffer);\n    return buffer.length === 1 ? buffer[0] : stringBufferToString(buffer);\n  }\n  toStringToBuffer(buffer) {\n    const tag = this.tag;\n    const props = this.props;\n    let { children } = this;\n    buffer[0] += `<${tag}`;\n    const propsKeys = Object.keys(props || {});\n    for (let i = 0, len = propsKeys.length; i < len; i++) {\n      const key = propsKeys[i];\n      const v = props[key];\n      if (key === \"style\" && typeof v === \"object\") {\n        const styles = Object.keys(v).map((k) => {\n          const property = k.replace(/[A-Z]/g, (match) => `-${match.toLowerCase()}`);\n          return `${property}:${v[k]}`;\n        }).join(\";\");\n        buffer[0] += ` style=\"${styles}\"`;\n      } else if (typeof v === \"string\") {\n        buffer[0] += ` ${key}=\"`;\n        escapeToBuffer(v, buffer);\n        buffer[0] += '\"';\n      } else if (v === null || v === void 0) {\n      } else if (typeof v === \"number\" || v.isEscaped) {\n        buffer[0] += ` ${key}=\"${v}\"`;\n      } else if (typeof v === \"boolean\" && booleanAttributes.includes(key)) {\n        if (v) {\n          buffer[0] += ` ${key}=\"\"`;\n        }\n      } else if (key === \"dangerouslySetInnerHTML\") {\n        if (children.length > 0) {\n          throw \"Can only set one of `children` or `props.dangerouslySetInnerHTML`.\";\n        }\n        children = [raw(v.__html)];\n      } else {\n        buffer[0] += ` ${key}=\"`;\n        escapeToBuffer(v.toString(), buffer);\n        buffer[0] += '\"';\n      }\n    }\n    if (emptyTags.includes(tag)) {\n      buffer[0] += \"/>\";\n      return;\n    }\n    buffer[0] += \">\";\n    childrenToStringToBuffer(children, buffer);\n    buffer[0] += `</${tag}>`;\n  }\n};\nvar JSXFunctionNode = class extends JSXNode {\n  toStringToBuffer(buffer) {\n    const { children } = this;\n    const res = this.tag.call(null, {\n      ...this.props,\n      children: children.length <= 1 ? children[0] : children\n    });\n    if (res instanceof Promise) {\n      buffer.unshift(\"\", res);\n    } else if (res instanceof JSXNode) {\n      res.toStringToBuffer(buffer);\n    } else if (typeof res === \"number\" || res.isEscaped) {\n      buffer[0] += res;\n    } else {\n      escapeToBuffer(res, buffer);\n    }\n  }\n};\nvar JSXFragmentNode = class extends JSXNode {\n  toStringToBuffer(buffer) {\n    childrenToStringToBuffer(this.children, buffer);\n  }\n};\nvar jsxFn = (tag, props, ...children) => {\n  if (typeof tag === \"function\") {\n    return new JSXFunctionNode(tag, props, children);\n  } else {\n    return new JSXNode(tag, props, children);\n  }\n};\nvar shallowEqual = (a, b) => {\n  if (a === b) {\n    return true;\n  }\n  const aKeys = Object.keys(a);\n  const bKeys = Object.keys(b);\n  if (aKeys.length !== bKeys.length) {\n    return false;\n  }\n  for (let i = 0, len = aKeys.length; i < len; i++) {\n    if (a[aKeys[i]] !== b[aKeys[i]]) {\n      return false;\n    }\n  }\n  return true;\n};\nvar memo = (component, propsAreEqual = shallowEqual) => {\n  let computed = void 0;\n  let prevProps = void 0;\n  return (props) => {\n    if (prevProps && !propsAreEqual(prevProps, props)) {\n      computed = void 0;\n    }\n    prevProps = props;\n    return computed || (computed = component(props));\n  };\n};\nvar Fragment = (props) => {\n  return new JSXFragmentNode(\"\", {}, props.children ? [props.children] : []);\n};\nvar createContext = (defaultValue) => {\n  const values = [defaultValue];\n  return {\n    values,\n    Provider(props) {\n      values.push(props.value);\n      const string = props.children ? (Array.isArray(props.children) ? new JSXFragmentNode(\"\", {}, props.children) : props.children).toString() : \"\";\n      values.pop();\n      if (string instanceof Promise) {\n        return Promise.resolve().then(async () => {\n          values.push(props.value);\n          const awaited = await string;\n          const promiseRes = raw(awaited, awaited.promises);\n          values.pop();\n          return promiseRes;\n        });\n      } else {\n        return raw(string);\n      }\n    }\n  };\n};\nvar useContext = (context) => {\n  return context.values[context.values.length - 1];\n};\nexport {\n  Fragment,\n  JSXNode,\n  createContext,\n  jsxFn as jsx,\n  memo,\n  useContext\n};\n", "// src/jsx/streaming.ts\nimport { raw } from \"../helper/html/index.js\";\nvar suspenseCounter = 0;\nasync function childrenToString(children) {\n  try {\n    return children.map((c) => c.toString());\n  } catch (e) {\n    if (e instanceof Promise) {\n      await e;\n      return childrenToString(children);\n    } else {\n      throw e;\n    }\n  }\n}\nvar Suspense = async ({ children, fallback }) => {\n  if (!children) {\n    return fallback.toString();\n  }\n  if (!Array.isArray(children)) {\n    children = [children];\n  }\n  let resArray = [];\n  try {\n    resArray = children.map((c) => c.toString());\n  } catch (e) {\n    if (e instanceof Promise) {\n      resArray = [e.then(() => childrenToString(children))];\n    } else {\n      throw e;\n    }\n  }\n  if (resArray.some((res) => res instanceof Promise)) {\n    const index = suspenseCounter++;\n    return raw(`<template id=\"H:${index}\"></template>${fallback.toString()}<!--/$-->`, [\n      Promise.all(resArray).then((htmlArray) => {\n        htmlArray = htmlArray.flat();\n        const html = `<template>${htmlArray.join(\"\")}</template><script>\n((d,c,n) => {\nc=d.currentScript.previousSibling\nd=d.getElementById('H:${index}')\ndo{n=d.nextSibling;n.remove()}while(n.nodeType!=8||n.nodeValue!='/$')\nd.replaceWith(c.content)\n})(document)\n<\\/script>`;\n        if (htmlArray.every((html2) => !html2.promises?.length)) {\n          return html;\n        }\n        return raw(html, htmlArray.map((html2) => html2.promises || []).flat());\n      })\n    ]);\n  } else {\n    return raw(resArray.join(\"\"));\n  }\n};\nvar textEncoder = new TextEncoder();\nvar renderToReadableStream = (str) => {\n  const reader = new ReadableStream({\n    async start(controller) {\n      const resolved = str instanceof Promise ? await str : await str.toString();\n      controller.enqueue(textEncoder.encode(resolved));\n      let resolvedCount = 0;\n      const promises = [];\n      const then = (promise) => {\n        promises.push(\n          promise.catch((err) => {\n            console.trace(err);\n            return \"\";\n          }).then((res) => {\n            if (res.promises) {\n              const resPromises = res.promises || [];\n              resPromises.forEach(then);\n            }\n            resolvedCount++;\n            controller.enqueue(textEncoder.encode(res));\n          })\n        );\n      };\n      resolved.promises?.map(then);\n      while (resolvedCount !== promises.length) {\n        await Promise.all(promises);\n      }\n      controller.close();\n    }\n  });\n  return reader;\n};\nexport {\n  Suspense,\n  renderToReadableStream\n};\n", "// src/middleware/jsx-renderer/index.ts\nimport { html, raw } from \"../../helper/html/index.js\";\nimport { jsx, createContext, useContext } from \"../../jsx/index.js\";\nimport { renderToReadableStream } from \"../../jsx/streaming.js\";\nvar RequestContext = createContext(null);\nvar createRenderer = (c, component, options) => (children, props) => {\n  const docType = typeof options?.docType === \"string\" ? options.docType : options?.docType === true ? \"<!DOCTYPE html>\" : \"\";\n  const body = html`${raw(docType)}${jsx(\n    RequestContext.Provider,\n    { value: c },\n    component ? component({ children, ...props || {} }) : children\n  )}`;\n  if (options?.stream) {\n    return c.body(renderToReadableStream(body), {\n      headers: options.stream === true ? {\n        \"Transfer-Encoding\": \"chunked\",\n        \"Content-Type\": \"text/html; charset=UTF-8\"\n      } : options.stream\n    });\n  } else {\n    return c.html(body);\n  }\n};\nvar jsxRenderer = (component, options) => (c, next) => {\n  c.setRenderer(createRenderer(c, component, options));\n  return next();\n};\nvar useRequestContext = () => {\n  const c = useContext(RequestContext);\n  if (!c) {\n    throw new Error(\"RequestContext is not provided.\");\n  }\n  return c;\n};\nexport {\n  RequestContext,\n  jsxRenderer,\n  useRequestContext\n};\n", "// src/jsx/jsx-dev-runtime.ts\nimport { jsx } from \"./index.js\";\nimport { Fragment } from \"./index.js\";\nfunction jsxDEV(tag, props) {\n  if (!props?.children) {\n    return jsx(tag, props);\n  }\n  const children = props.children;\n  delete props[\"children\"];\n  return Array.isArray(children) ? jsx(tag, props, ...children) : jsx(tag, props, children);\n}\nexport {\n  Fragment,\n  jsxDEV\n};\n", "import { jsxRenderer } from 'hono/jsx-renderer'\n\nexport const renderer = jsxRenderer(({ children }) => (\n  <html>\n    <head>\n      <meta charset=\"UTF-8\" />\n      <meta name=\"viewport\" content=\"width=device-width, initial-scale=1.0\" />\n      <link rel=\"stylesheet\" href=\"https://cdn.jsdelivr.net/npm/@exampledev/new.css@1.1.2/new.min.css\" />\n      <script src=\"/script.js\"></script>\n      <title>Free AI Art Generator</title>\n      <meta name=\"description\" content=\"Generate free AI art based on your prompts and styles.\" />\n      <meta name=\"keywords\" content=\"AI Art, Free Art Generator, AI Generated Art\" />\n      <meta name=\"author\" content=\"AI Art Generator Team\" />\n      <meta property=\"og:title\" content=\"Free AI Art Generator\" />\n      <meta property=\"og:description\" content=\"Generate free AI art based on your prompts and styles.\" />\n      <meta property=\"og:image\" content=\"https://aiartgenerator.com/assets/ai_art_generator.png\" />\n      <meta property=\"og:url\" content=\"https://art.aiphotoshoot.com\" />\n      <meta name=\"twitter:title\" content=\"Free AI Art Generator\" />\n      <meta name=\"twitter:description\" content=\"Generate free AI art based on your prompts and styles.\" />\n      <meta name=\"twitter:image\" content=\"https://aiartgenerator.com/assets/ai_art_generator.png\" />\n      <meta name=\"twitter:card\" content=\"summary_large_image\" />\n      <meta name=\"twitter:creator\" content=\"@jackculpan\" />\n      <meta name=\"twitter:site\" content=\"@jackculpan\" />\n    </head>\n    <body>\n      <header style={{ display: 'flex', justifyContent: 'space-between', alignItems: 'center' }}>\n        <h1>Free AI Art Generator</h1>\n        <a href=\"/\" style={{ display: 'flex', justifyContent: 'flex-end' }}>\n          <button>Generate New Art</button>\n        </a>\n      </header>\n      <div>{children}</div>\n      <header style={{ marginTop: \"20px\" }}>\n        <p>Created by <a href=\"https://twitter.com/jackculpan\" target=\"_blank\" rel=\"noopener noreferrer\">Jack Culpan</a> using <a href=\"https://ai.cloudflare.com/\">Cloudflare AI, Workers and KV.</a>\n        </p>\n      </header>\n    </body>\n  </html>\n))\n", "export enum TensorType {\n  String = \"str\",\n  Bool = \"bool\",\n  Float16 = \"float16\",\n  Float32 = \"float32\",\n  // Float64 = \"float64\",\n  Int16 = \"int16\",\n  Int32 = \"int32\",\n  Int64 = \"int64\",\n  Int8 = \"int8\",\n  Uint16 = \"uint16\",\n  Uint32 = \"uint32\",\n  Uint64 = \"uint64\",\n  Uint8 = \"uint8\",\n}\n\ntype TensorOpts = {\n  shape?: number[];\n  name?: string;\n};\n\nexport type TensorsObject = {\n  [name: string]: Tensor<any>;\n};\n\nconst TypedArrayProto = Object.getPrototypeOf(Uint8Array);\n\nfunction isArray(value: any) {\n  return Array.isArray(value) || value instanceof TypedArrayProto;\n}\n\n// counts arrays, typed arrays, and arrays of typed arrays\nfunction arrLength(obj: any) {\n  return obj instanceof TypedArrayProto\n    ? obj.length\n    : obj.flat(Infinity).reduce((acc: any, cur: any) => acc + (cur instanceof TypedArrayProto ? cur.length : 1), 0);\n}\n\nfunction ensureShape(shape: number[], value: any) {\n  if (shape.length === 0 && !isArray(value)) {\n    // scalar value\n    return;\n  }\n\n  const count = shape.reduce((acc, v) => {\n    if (!Number.isInteger(v)) {\n      throw new Error(`expected shape to be array-like of integers but found non-integer element \"${v}\"`);\n    }\n    return acc * v;\n  }, 1);\n\n  if (count != arrLength(value)) {\n    throw new Error(\n      `invalid shape: expected ${count} elements for shape ${shape} but value array has length ${value.length}`\n    );\n  }\n}\n\nfunction ensureType(type: TensorType, value: any) {\n  if (isArray(value)) {\n    value.forEach((v: any) => ensureType(type, v));\n    return;\n  }\n\n  switch (type) {\n    case TensorType.Bool: {\n      if (typeof value === \"boolean\") {\n        return;\n      }\n      break;\n    }\n\n    case TensorType.Float16:\n    case TensorType.Float32: {\n      // We can't make sure the value is a float (using !Number.isInteger) because\n      // it's not possible in JS to transform a int into a float, which would\n      // make our API unsuable.\n      if (typeof value === \"number\") {\n        return;\n      }\n      break;\n    }\n\n    case TensorType.Int8:\n    case TensorType.Uint8:\n    case TensorType.Int16:\n    case TensorType.Uint16:\n    case TensorType.Int32:\n    case TensorType.Uint32: {\n      if (Number.isInteger(value)) {\n        return;\n      }\n      break;\n    }\n\n    case TensorType.Int64:\n    case TensorType.Uint64: {\n      if (typeof value === \"bigint\") {\n        return;\n      }\n      break;\n    }\n\n    case TensorType.String: {\n      if (typeof value === \"string\") {\n        return;\n      }\n      break;\n    }\n  }\n\n  throw new Error(`unexpected type \"${type}\" with value \"${value}\".`);\n}\n\nfunction serializeType(type: TensorType, value: any) {\n  if (isArray(value)) {\n    // Return as an array, transform TypedArray into regular arrays.\n    return [...value].map((v) => serializeType(type, v));\n  }\n  switch (type) {\n    case TensorType.String:\n    case TensorType.Bool:\n    case TensorType.Float16:\n    case TensorType.Float32:\n    case TensorType.Int8:\n    case TensorType.Uint8:\n    case TensorType.Int16:\n    case TensorType.Uint16:\n    case TensorType.Uint32:\n    case TensorType.Int32: {\n      return value;\n    }\n\n    case TensorType.Int64:\n    case TensorType.Uint64: {\n      return value.toString();\n    }\n  }\n\n  throw new Error(`unexpected type \"${type}\" with value \"${value}\".`);\n}\n\nfunction deserializeType(type: TensorType, value: any) {\n  if (isArray(value)) {\n    return value.map((v) => deserializeType(type, v));\n  }\n  switch (type) {\n    case TensorType.String:\n    case TensorType.Bool:\n    case TensorType.Float16:\n    case TensorType.Float32:\n    case TensorType.Int8:\n    case TensorType.Uint8:\n    case TensorType.Int16:\n    case TensorType.Uint16:\n    case TensorType.Uint32:\n    case TensorType.Int32: {\n      return value;\n    }\n\n    case TensorType.Int64:\n    case TensorType.Uint64: {\n      return BigInt(value);\n    }\n  }\n\n  throw new Error(`unexpected type \"${type}\" with value \"${value}\".`);\n}\n\nexport class Tensor<T extends TensorType> {\n  type: T;\n  value: any | any[];\n  name: string | null;\n  shape: number[];\n\n  constructor(type: T, value: any | any[], opts: TensorOpts = {}) {\n    this.type = type;\n    this.value = value;\n\n    ensureType(type, this.value);\n\n    if (opts.shape === undefined) {\n      if (isArray(this.value)) {\n        this.shape = [arrLength(value)];\n      } else {\n        this.shape = [];\n        // this.shape = [1];\n        // this.value = [value];\n      }\n    } else {\n      this.shape = opts.shape;\n    }\n\n    ensureShape(this.shape, this.value);\n\n    this.name = opts.name || null;\n  }\n\n  static fromJSON(obj: any): Tensor<any> {\n    const { type, shape, value, b64Value, name } = obj;\n    const opts = { shape, name };\n\n    if (b64Value !== undefined) {\n      // `b64Value` is the legacy encoding for values that aren't representable in\n      // JSON; old constellation-js client are still sending b64Value.\n      const value = b64ToArray(b64Value, type)[0];\n      return new Tensor(type, value, opts);\n    } else {\n      return new Tensor(type, deserializeType(type, value), opts);\n    }\n  }\n\n  toJSON() {\n    return {\n      type: this.type,\n      shape: this.shape,\n      name: this.name,\n      value: serializeType(this.type, this.value),\n    };\n  }\n}\n\n// Support for legacy value encoding\nfunction b64ToArray(base64: string, type: string) {\n  const byteString = atob(base64);\n  const bytes = new Uint8Array(byteString.length);\n  for (let i = 0; i < byteString.length; i++) {\n    bytes[i] = byteString.charCodeAt(i);\n  }\n  const arrBuffer = new DataView(bytes.buffer).buffer;\n\n  switch (type) {\n    case \"float32\":\n      return new Float32Array(arrBuffer);\n    case \"float64\":\n      return new Float64Array(arrBuffer);\n    case \"int32\":\n      return new Int32Array(arrBuffer);\n    case \"int64\":\n      return new BigInt64Array(arrBuffer);\n    default:\n      throw Error(`invalid data type for base64 input: ${type}`);\n  }\n}\n", "export enum templateFlags {\n  NONE,\n  CARRY_SYSTEM_INST,\n  ABSORB_ROLE,\n  APPEND_LAST_SYSTEM,\n}\n\nexport const tgTemplates = {\n  // ex: https://huggingface.co/TheBloke/deepseek-coder-6.7B-base-AWQ\n  bare: {\n    system: {\n      flag: templateFlags.ABSORB_ROLE,\n    },\n    user: {\n      flag: templateFlags.APPEND_LAST_SYSTEM,\n    },\n    assistant: {\n      pre: \" \",\n      post: \" \",\n    },\n  },\n  // ex: https://huggingface.co/TheBloke/LlamaGuard-7B-AWQ\n  inst: {\n    system: {\n      flag: templateFlags.ABSORB_ROLE,\n    },\n    user: {\n      pre: \"[INST] \",\n      post: \" [/INST]\",\n      flag: templateFlags.APPEND_LAST_SYSTEM,\n    },\n    assistant: {\n      pre: \" \",\n      post: \" \",\n    },\n  },\n  // https://github.com/facebookresearch/llama/blob/main/llama/generation.py#L340-L361\n  // https://replicate.com/blog/how-to-prompt-llama\n  // https://huggingface.co/TheBloke/Llama-2-13B-chat-AWQ#prompt-template-llama-2-chat\n  llama2: {\n    system: {\n      pre: \"[INST] <<SYS>>\\n\",\n      post: \"\\n<</SYS>>\\n\\n\",\n    },\n    user: {\n      pre: \"<s>[INST] \",\n      post: \" [/INST]\",\n      flag: templateFlags.CARRY_SYSTEM_INST,\n    },\n    assistant: {\n      pre: \" \",\n      post: \"</s>\",\n    },\n  },\n  // https://huggingface.co/TheBloke/deepseek-coder-6.7B-instruct-AWQ\n  deepseek: {\n    system: {\n      post: \"\\n\",\n    },\n    user: {\n      pre: \"### Instruction:\\n\",\n      post: \"\\n\",\n    },\n    assistant: {\n      pre: \"### Response:\\n\",\n      post: \"\\n\",\n    },\n    global: {\n      post: \"### Response:\\n\",\n    },\n  },\n  // https://huggingface.co/TheBloke/openchat_3.5-AWQ#prompt-template-openchat\n  openchat: {\n    system: {\n      flag: templateFlags.ABSORB_ROLE,\n    },\n    user: {\n      pre: \"GPT4 User: \",\n      post: \"<|end_of_turn|>\",\n      flag: templateFlags.APPEND_LAST_SYSTEM,\n    },\n    assistant: {\n      pre: \"GPT4 Assistant: \",\n      post: \"<|end_of_turn|>\",\n    },\n    global: {\n      post: \"GPT4 Assistant:\",\n    },\n  },\n  // https://huggingface.co/TheBloke/OpenHermes-2.5-Mistral-7B-AWQ#prompt-template-chatml\n  // https://huggingface.co/TheBloke/Orca-2-13B-AWQ#prompt-template-chatml\n  chatml: {\n    system: {\n      pre: \"<|im_start|>system\\n\",\n      post: \"<|im_end|>\\n\",\n    },\n    user: {\n      pre: \"<|im_start|>user\\n\",\n      post: \"<|im_end|>\\n\",\n    },\n    assistant: {\n      pre: \"<|im_start|>assistant\\n\",\n      post: \"<|im_end|>\\n\",\n    },\n    global: {\n      post: \"<|im_start|>assistant\\n\",\n    },\n  },\n  // https://huggingface.co/TheBloke/neural-chat-7B-v3-1-AWQ#prompt-template-orca-hashes\n  \"orca-hashes\": {\n    system: {\n      pre: \"### System:\\n\",\n      post: \"\\n\\n\",\n    },\n    user: {\n      pre: \"### User:\\n\",\n      post: \"\\n\\n\",\n    },\n    assistant: {\n      pre: \"### Assistant:\\n\",\n      post: \"\\n\\n\",\n    },\n    global: {\n      post: \"### Assistant:\\n\\n\",\n    },\n  },\n  // https://huggingface.co/TheBloke/CodeLlama-7B-Instruct-AWQ#prompt-template-codellama\n  \"codellama-instruct\": {\n    system: {\n      pre: \"[INST] \",\n      post: \"\\n\",\n    },\n    user: {\n      pre: \"[INST] \",\n      post: \" [/INST]\\n\",\n      flag: templateFlags.CARRY_SYSTEM_INST,\n    },\n    assistant: {\n      post: \"\\n\",\n    },\n  },\n  // https://huggingface.co/TheBloke/Mistral-7B-Instruct-v0.1-AWQ#prompt-template-mistral\n  \"mistral-instruct\": {\n    system: {\n      pre: \"<s>[INST] \",\n      post: \" \",\n    },\n    user: {\n      pre: \"[INST] \",\n      post: \" [/INST]\",\n      flag: templateFlags.CARRY_SYSTEM_INST,\n    },\n    assistant: {\n      pre: \" \",\n      post: \"</s>\",\n    },\n  },\n  // https://huggingface.co/TheBloke/zephyr-7B-beta-AWQ#prompt-template-zephyr\n  // https://huggingface.co/HuggingFaceH4/zephyr-7b-alpha\n  zephyr: {\n    system: {\n      pre: \"<s><|system|>\\n\",\n      post: \"</s>\\n\",\n    },\n    user: {\n      pre: \"<|user|>\\n\",\n      post: \"</s>\\n\",\n    },\n    assistant: {\n      pre: \"<|assistant|>\\n\",\n      post: \"</s>\\n\",\n    },\n    global: {\n      post: \"<|assistant|>\\n\",\n    },\n  },\n};\n\nexport const generateTgTemplate = (messages: any, template: string) => {\n  let prompt = \"\";\n  const state = { lastSystem: false, systemCount: 0, userCount: 0, assistantCount: 0 };\n  for (const message of messages) {\n    switch (message.role) {\n      case \"system\":\n        state.systemCount++;\n        state.lastSystem = message.content;\n        prompt += applyRole(template, message.role, message.content, state);\n        break;\n      case \"user\":\n        state.userCount++;\n        prompt += applyRole(template, message.role, message.content, state);\n        break;\n      case \"assistant\":\n        state.assistantCount++;\n        prompt += applyRole(template, message.role, message.content, state);\n        break;\n    }\n  }\n  prompt = applyRole(template, \"global\", prompt, state);\n  return prompt;\n};\n\nexport const applyTag = (template: string, role: string, type: string, state: any) => {\n  if (\n    type == \"pre\" &&\n    tgTemplates[template][role].flag == templateFlags.CARRY_SYSTEM_INST &&\n    state.systemCount == 1 &&\n    state.userCount == 1\n  ) {\n    return \"\";\n  }\n  return tgTemplates[template][role][type] || \"\";\n};\n\nexport const applyRole = (template: string, role: string, content: string, state: any) => {\n  if (tgTemplates[template] && tgTemplates[template][role]) {\n    if (tgTemplates[template][role].flag == templateFlags.ABSORB_ROLE) return \"\";\n    if (\n      tgTemplates[template][role].flag == templateFlags.APPEND_LAST_SYSTEM &&\n      state.lastSystem &&\n      state.userCount == 1\n    ) {\n      content = `${state.lastSystem}${\n        [\":\", \".\", \"!\", \"?\"].indexOf(state.lastSystem.slice(-1)) == -1 ? \":\" : \"\"\n      } ${content}`;\n    }\n    return applyTag(template, role, \"pre\", state) + (content || \"\") + applyTag(template, role, \"post\", state);\n  }\n  return content || \"\";\n};\n", "import { Tensor, TensorType } from \"../tensor\";\nimport { AiTask } from \"../ai\";\nimport { generateTgTemplate } from \"../templates\";\n\nexport type RoleScopedChatInput = {\n  role: string;\n  content: string;\n};\n\nexport type AiTextGenerationInput = {\n  prompt?: string;\n  raw?: boolean;\n  stream?: boolean;\n  max_tokens?: number;\n  messages?: RoleScopedChatInput[];\n};\n\nexport type AiTextGenerationOutput =\n  | {\n      response?: string;\n    }\n  | ReadableStream;\n\nexport class AiTextGeneration implements AiTask {\n  private modelSettings: any;\n  public inputs: AiTextGenerationInput;\n  public preProcessedInputs: any;\n  public postProcessedOutputs: AiTextGenerationOutput | ReadableStream;\n  public tensors: Array<Tensor<any>>;\n  // run ./scripts/gen-validators.ts if you change the schema\n  public schema = {\n    input: {\n      type: \"object\",\n      oneOf: [\n        {\n          properties: {\n            prompt: {\n              type: \"string\",\n              maxLength: 4096,\n            },\n            raw: {\n              type: \"boolean\",\n              default: false,\n            },\n            stream: {\n              type: \"boolean\",\n              default: false,\n            },\n            max_tokens: {\n              type: \"integer\",\n              default: 256,\n            },\n          },\n          required: [\"prompt\"],\n        },\n        {\n          properties: {\n            messages: {\n              type: \"array\",\n              items: {\n                type: \"object\",\n                properties: {\n                  role: {\n                    type: \"string\",\n                  },\n                  content: {\n                    type: \"string\",\n                    maxLength: 4096,\n                  },\n                },\n                required: [\"role\", \"content\"],\n              },\n            },\n            stream: {\n              type: \"boolean\",\n              default: false,\n            },\n            max_tokens: {\n              type: \"integer\",\n              default: 256,\n            },\n          },\n          required: [\"messages\"],\n        },\n      ],\n    },\n    output: {\n      oneOf: [\n        {\n          type: \"object\",\n          contentType: \"application/json\",\n          properties: {\n            response: {\n              type: \"string\",\n            },\n          },\n        },\n        {\n          type: \"string\",\n          contentType: \"text/event-stream\",\n          format: \"binary\",\n        },\n      ],\n    },\n  };\n\n  constructor(inputs: AiTextGenerationInput, modelSettings: any) {\n    this.inputs = inputs;\n    this.modelSettings = modelSettings || {\n      experimental: true,\n      inputsDefaultsStream: {\n        max_tokens: 512,\n      },\n      inputsDefaults: {\n        max_tokens: 256,\n      },\n      preProcessingArgs: {\n        promptTemplate: \"inst\",\n        defaultContext: \"\",\n      },\n    };\n  }\n\n  preProcessing() {\n    // model specific inputs defaults, if any\n    if (this.inputs.stream && this.modelSettings.inputsDefaultsStream) {\n      this.inputs = { ...this.modelSettings.inputsDefaultsStream, ...this.inputs };\n    } else if (this.modelSettings.inputsDefaults) {\n      this.inputs = { ...this.modelSettings.inputsDefaults, ...this.inputs };\n    }\n\n    let prompt: string = \"\";\n    // prompt syntax\n    if (this.inputs.messages === undefined) {\n      if (this.inputs.raw == true) {\n        prompt = this.inputs.prompt;\n      } else {\n        prompt = generateTgTemplate(\n          [\n            { role: \"system\", content: this.modelSettings.preProcessingArgs.defaultContext },\n            { role: \"user\", content: this.inputs.prompt },\n          ],\n          this.modelSettings.preProcessingArgs.promptTemplate\n        );\n      }\n    } else {\n      // scoped inputs\n      prompt = generateTgTemplate(this.inputs.messages, this.modelSettings.preProcessingArgs.promptTemplate);\n    }\n    this.preProcessedInputs = prompt;\n  }\n\n  generateTensors() {\n    this.tensors = [\n      new Tensor(TensorType.String, [this.preProcessedInputs], {\n        shape: [1],\n        name: \"INPUT_0\",\n      }),\n      new Tensor(TensorType.Uint32, [this.inputs.max_tokens], {\n        // sequence length\n        shape: [1],\n        name: \"INPUT_1\",\n      }),\n    ];\n  }\n\n  postProcessing(response: any) {\n    if (this.modelSettings.postProcessingFunc) {\n      this.postProcessedOutputs = { response: this.modelSettings.postProcessingFunc(response) };\n    } else {\n      this.postProcessedOutputs = { response: response.name.value[0] };\n    }\n  }\n\n  postProcessingStream(response: any) {\n    if (this.modelSettings.postProcessingFuncStream) {\n      return { response: this.modelSettings.postProcessingFuncStream(response) };\n    } else {\n      return { response: response.name.value[0] };\n    }\n  }\n}\n", "import { Tensor, TensorType } from \"../tensor\";\nimport { AiTask } from \"../ai\";\n\nexport type AiTextClassificationInput = {\n  text: string;\n};\n\nexport type AiTextClassificationOutput = {\n  score?: number;\n  label?: string;\n}[];\n\nexport class AiTextClassification implements AiTask {\n  private modelSettings: any;\n  public inputs: AiTextClassificationInput;\n  public preProcessedInputs: any;\n  public postProcessedOutputs: AiTextClassificationOutput;\n  public tensors: Array<Tensor<any>>;\n  // run ./scripts/gen-validators.ts if you change the schema\n  public schema = {\n    input: {\n      type: \"object\",\n      properties: {\n        text: {\n          type: \"string\",\n        },\n      },\n      required: [\"text\"],\n    },\n    output: {\n      type: \"array\",\n      contentType: \"application/json\",\n      items: {\n        type: \"object\",\n        properties: {\n          score: {\n            type: \"number\",\n          },\n          label: {\n            type: \"string\",\n          },\n        },\n      },\n    },\n  };\n\n  constructor(inputs: AiTextClassificationInput, modelSettings: any) {\n    this.inputs = inputs;\n    this.modelSettings = modelSettings;\n  }\n\n  preProcessing() {\n    this.preProcessedInputs = this.inputs;\n  }\n\n  generateTensors() {\n    this.tensors = [\n      new Tensor(TensorType.String, [this.preProcessedInputs.text], {\n        shape: [1],\n        name: \"input_text\",\n      }),\n    ];\n  }\n\n  postProcessing(response: any) {\n    this.postProcessedOutputs = [\n      {\n        label: \"NEGATIVE\",\n        score: response.logits.value[0][0],\n      },\n      {\n        label: \"POSITIVE\",\n        score: response.logits.value[0][1],\n      },\n    ];\n  }\n}\n", "import { Tensor, TensorType } from \"../tensor\";\nimport { AiTask } from \"../ai\";\n\nexport type AiTextEmbeddingsInput = {\n  text: string | string[];\n};\n\nexport type AiTextEmbeddingsOutput = {\n  shape: number[];\n  data: number[][];\n};\n\nconst chunkArray = (arr: any, size: number) =>\n  arr.length > size ? [arr.slice(0, size), ...chunkArray(arr.slice(size), size)] : [arr];\n\nexport class AiTextEmbeddings implements AiTask {\n  private modelSettings: any;\n  public inputs: AiTextEmbeddingsInput;\n  public preProcessedInputs: any;\n  public postProcessedOutputs: AiTextEmbeddingsOutput;\n  public tensors: Array<Tensor<any>>;\n  // run ./scripts/gen-validators.ts if you change the schema\n  public schema = {\n    input: {\n      type: \"object\",\n      properties: {\n        text: {\n          oneOf: [\n            { type: \"string\" },\n            {\n              type: \"array\",\n              items: {\n                type: \"string\",\n              },\n              maxItems: 100,\n            },\n          ],\n        },\n      },\n      required: [\"text\"],\n    },\n    output: {\n      type: \"object\",\n      contentType: \"application/json\",\n      properties: {\n        shape: {\n          type: \"array\",\n          items: {\n            type: \"number\",\n          },\n        },\n        data: {\n          type: \"array\",\n          items: {\n            type: \"array\",\n            items: {\n              type: \"number\",\n            },\n          },\n        },\n      },\n    },\n  };\n\n  constructor(inputs: AiTextEmbeddingsInput, modelSettings: any) {\n    this.inputs = inputs;\n    this.modelSettings = modelSettings;\n  }\n\n  preProcessing() {\n    this.preProcessedInputs = this.inputs;\n  }\n\n  generateTensors() {\n    this.tensors = [\n      new Tensor(\n        TensorType.String,\n        Array.isArray(this.preProcessedInputs.text) ? this.preProcessedInputs.text : [this.preProcessedInputs.text],\n        {\n          shape: [\n            Array.isArray(this.preProcessedInputs.text)\n              ? this.preProcessedInputs.text.length\n              : [this.preProcessedInputs.text].length,\n          ],\n          name: \"input_text\",\n        }\n      ),\n    ];\n  }\n\n  postProcessing(response: any) {\n    if (this.modelSettings.postProcessingFunc) {\n      this.postProcessedOutputs = this.modelSettings.postProcessingFunc(response);\n    } else {\n      this.postProcessedOutputs = {\n        shape: response.embeddings.shape,\n        data: response.embeddings.value,\n      };\n    }\n  }\n}\n", "import { Tensor, TensorType } from \"../tensor\";\nimport { AiTask } from \"../ai\";\n\nexport type AiTranslationInput = {\n  text: string;\n  target_lang: string;\n  source_lang?: string;\n};\n\nexport type AiTranslationOutput = {\n  translated_text?: string;\n};\n\nexport class AiTranslation implements AiTask {\n  private modelSettings: any;\n  public inputs: AiTranslationInput;\n  public preProcessedInputs: any;\n  public postProcessedOutputs: AiTranslationOutput;\n  public tensors: Array<Tensor<any>>;\n  // run ./scripts/gen-validators.ts if you change the schema\n  public schema = {\n    input: {\n      type: \"object\",\n      properties: {\n        text: {\n          type: \"string\",\n        },\n        source_lang: {\n          type: \"string\",\n          default: \"en\",\n        },\n        target_lang: {\n          type: \"string\",\n        },\n      },\n      required: [\"text\", \"target_lang\"],\n    },\n    output: {\n      type: \"object\",\n      contentType: \"application/json\",\n      properties: {\n        translated_text: {\n          type: \"string\",\n        },\n      },\n    },\n  };\n\n  constructor(inputs: AiTranslationInput, modelSettings: any) {\n    this.inputs = inputs;\n    this.modelSettings = modelSettings;\n  }\n\n  preProcessing() {\n    this.preProcessedInputs = this.inputs;\n  }\n\n  generateTensors() {\n    this.tensors = [\n      new Tensor(TensorType.String, [this.preProcessedInputs.text], {\n        shape: [1, 1],\n        name: \"text\",\n      }),\n      new Tensor(TensorType.String, [this.preProcessedInputs.source_lang || \"en\"], {\n        shape: [1, 1],\n        name: \"source_lang\",\n      }),\n      new Tensor(TensorType.String, [this.preProcessedInputs.target_lang], {\n        shape: [1, 1],\n        name: \"target_lang\",\n      }),\n    ];\n  }\n\n  postProcessing(response: any) {\n    this.postProcessedOutputs = { translated_text: response.name.value[0] };\n  }\n}\n", "import { Tensor, TensorType } from \"../tensor\";\nimport { AiTask } from \"../ai\";\n\nexport type AiSpeechRecognitionInput = {\n  audio: number[];\n};\n\nexport type AiSpeechRecognitionOutput = {\n  text?: string;\n};\n\nexport class AiSpeechRecognition implements AiTask {\n  private modelSettings: any;\n  public inputs: AiSpeechRecognitionInput;\n  public preProcessedInputs: any;\n  public postProcessedOutputs: AiSpeechRecognitionOutput;\n  public tensors: Array<Tensor<any>>;\n  // run ./scripts/gen-validators.ts if you change the schema\n  public schema = {\n    input: {\n      oneOf: [\n        { type: \"string\", format: \"binary\" },\n        {\n          type: \"object\",\n          properties: {\n            audio: {\n              type: \"array\",\n              items: {\n                type: \"number\",\n              },\n            },\n          },\n        },\n      ],\n    },\n    output: {\n      type: \"object\",\n      contentType: \"application/json\",\n      properties: {\n        text: {\n          type: \"string\",\n        },\n        word_count: {\n          type: \"number\",\n        },\n        words: {\n          type: \"array\",\n          items: {\n            type: \"object\",\n            properties: {\n              word: {\n                type: \"string\",\n              },\n              start: {\n                type: \"number\",\n              },\n              end: {\n                type: \"number\",\n              },\n            },\n          },\n        },\n      },\n      required: [\"text\"],\n    },\n  };\n\n  constructor(inputs: AiSpeechRecognitionInput, modelSettings: any) {\n    this.inputs = inputs;\n    this.modelSettings = modelSettings;\n  }\n\n  preProcessing() {\n    this.preProcessedInputs = this.inputs;\n  }\n\n  generateTensors() {\n    this.tensors = [\n      new Tensor(TensorType.Uint8, this.preProcessedInputs.audio, {\n        shape: [1, this.preProcessedInputs.audio.length],\n        name: \"audio\",\n      }),\n    ];\n  }\n\n  postProcessing(response: any) {\n    if (this.modelSettings.postProcessingFunc) {\n      this.postProcessedOutputs = this.modelSettings.postProcessingFunc(response);\n    } else {\n      this.postProcessedOutputs = { text: response.name.value[0].trim() };\n    }\n  }\n}\n", "export const resnetLabels = [\n  \"TENCH\",\n  \"GOLDFISH\",\n  \"WHITE SHARK\",\n  \"TIGER SHARK\",\n  \"HAMMERHEAD SHARK\",\n  \"ELECTRIC RAY\",\n  \"STINGRAY\",\n  \"ROOSTER\",\n  \"HEN\",\n  \"OSTRICH\",\n  \"BRAMBLING\",\n  \"GOLDFINCH\",\n  \"HOUSE FINCH\",\n  \"SNOWBIRD\",\n  \"INDIGO FINCH\",\n  \"ROBIN\",\n  \"BULBUL\",\n  \"JAY\",\n  \"MAGPIE\",\n  \"CHICKADEE\",\n  \"WATER OUZEL\",\n  \"KITE\",\n  \"BALD EAGLE\",\n  \"VULTURE\",\n  \"GREAT GREY OWL\",\n  \"FIRE SALAMANDER\",\n  \"NEWT\",\n  \"EFT\",\n  \"SPOTTED SALAMANDER\",\n  \"AXOLOTL\",\n  \"BULL FROG\",\n  \"TREE FROG\",\n  \"TAILED FROG\",\n  \"LOGGERHEAD\",\n  \"LEATHERBACK TURTLE\",\n  \"MUD TURTLE\",\n  \"TERRAPIN\",\n  \"BOX TURTLE\",\n  \"BANDED GECKO\",\n  \"COMMON IGUANA\",\n  \"AMERICAN CHAMELEON\",\n  \"WHIPTAIL\",\n  \"AGAMA\",\n  \"FRILLED LIZARD\",\n  \"ALLIGATOR LIZARD\",\n  \"GILA MONSTER\",\n  \"GREEN LIZARD\",\n  \"AFRICAN CHAMELEON\",\n  \"KOMODO DRAGON\",\n  \"AFRICAN CROCODILE\",\n  \"AMERICAN ALLIGATOR\",\n  \"TRICERATOPS\",\n  \"THUNDER SNAKE\",\n  \"RINGNECK SNAKE\",\n  \"HOGNOSE SNAKE\",\n  \"GREEN SNAKE\",\n  \"KING SNAKE\",\n  \"GARTER SNAKE\",\n  \"WATER SNAKE\",\n  \"VINE SNAKE\",\n  \"NIGHT SNAKE\",\n  \"BOA\",\n  \"ROCK PYTHON\",\n  \"COBRA\",\n  \"GREEN MAMBA\",\n  \"SEA SNAKE\",\n  \"HORNED VIPER\",\n  \"DIAMONDBACK\",\n  \"SIDEWINDER\",\n  \"TRILOBITE\",\n  \"HARVESTMAN\",\n  \"SCORPION\",\n  \"GARDEN SPIDER\",\n  \"BARN SPIDER\",\n  \"GARDEN SPIDER\",\n  \"BLACK WIDOW\",\n  \"TARANTULA\",\n  \"WOLF SPIDER\",\n  \"TICK\",\n  \"CENTIPEDE\",\n  \"GROUSE\",\n  \"PTARMIGAN\",\n  \"RUFFED GROUSE\",\n  \"PRAIRIE CHICKEN\",\n  \"PEACOCK\",\n  \"QUAIL\",\n  \"PARTRIDGE\",\n  \"AFRICAN GREY\",\n  \"MACAW\",\n  \"COCKATOO\",\n  \"LORIKEET\",\n  \"COUCAL\",\n  \"BEE EATER\",\n  \"HORNBILL\",\n  \"HUMMINGBIRD\",\n  \"JACAMAR\",\n  \"TOUCAN\",\n  \"DRAKE\",\n  \"MERGANSER\",\n  \"GOOSE\",\n  \"BLACK SWAN\",\n  \"TUSKER\",\n  \"ECHIDNA\",\n  \"PLATYPUS\",\n  \"WALLABY\",\n  \"KOALA\",\n  \"WOMBAT\",\n  \"JELLYFISH\",\n  \"SEA ANEMONE\",\n  \"BRAIN CORAL\",\n  \"FLATWORM\",\n  \"NEMATODE\",\n  \"CONCH\",\n  \"SNAIL\",\n  \"SLUG\",\n  \"SEA SLUG\",\n  \"CHITON\",\n  \"CHAMBERED NAUTILUS\",\n  \"DUNGENESS CRAB\",\n  \"ROCK CRAB\",\n  \"FIDDLER CRAB\",\n  \"KING CRAB\",\n  \"AMERICAN LOBSTER\",\n  \"SPINY LOBSTER\",\n  \"CRAYFISH\",\n  \"HERMIT CRAB\",\n  \"ISOPOD\",\n  \"WHITE STORK\",\n  \"BLACK STORK\",\n  \"SPOONBILL\",\n  \"FLAMINGO\",\n  \"LITTLE BLUE HERON\",\n  \"AMERICAN EGRET\",\n  \"BITTERN\",\n  \"CRANE\",\n  \"LIMPKIN\",\n  \"EUROPEAN GALLINULE\",\n  \"AMERICAN COOT\",\n  \"BUSTARD\",\n  \"RUDDY TURNSTONE\",\n  \"RED-BACKED SANDPIPER\",\n  \"REDSHANK\",\n  \"DOWITCHER\",\n  \"OYSTERCATCHER\",\n  \"PELICAN\",\n  \"KING PENGUIN\",\n  \"ALBATROSS\",\n  \"GREY WHALE\",\n  \"KILLER WHALE\",\n  \"DUGONG\",\n  \"SEA LION\",\n  \"CHIHUAHUA\",\n  \"JAPANESE SPANIEL\",\n  \"MALTESE DOG\",\n  \"PEKINESE\",\n  \"SHIH-TZU\",\n  \"BLENHEIM SPANIEL\",\n  \"PAPILLON\",\n  \"TOY TERRIER\",\n  \"RHODESIAN RIDGEBACK\",\n  \"AFGHAN HOUND\",\n  \"BASSET\",\n  \"BEAGLE\",\n  \"BLOODHOUND\",\n  \"BLUETICK\",\n  \"COONHOUND\",\n  \"WALKER HOUND\",\n  \"ENGLISH FOXHOUND\",\n  \"REDBONE\",\n  \"BORZOI\",\n  \"IRISH WOLFHOUND\",\n  \"ITALIAN GREYHOUND\",\n  \"WHIPPET\",\n  \"IBIZAN HOUND\",\n  \"NORWEGIAN ELKHOUND\",\n  \"OTTERHOUND\",\n  \"SALUKI\",\n  \"SCOTTISH DEERHOUND\",\n  \"WEIMARANER\",\n  \"STAFFORDSHIRE BULLTERRIER\",\n  \"STAFFORDSHIRE TERRIER\",\n  \"BEDLINGTON TERRIER\",\n  \"BORDER TERRIER\",\n  \"KERRY BLUE TERRIER\",\n  \"IRISH TERRIER\",\n  \"NORFOLK TERRIER\",\n  \"NORWICH TERRIER\",\n  \"YORKSHIRE TERRIER\",\n  \"WIRE-HAIRED FOX TERRIER\",\n  \"LAKELAND TERRIER\",\n  \"SEALYHAM TERRIER\",\n  \"AIREDALE\",\n  \"CAIRN\",\n  \"AUSTRALIAN TERRIER\",\n  \"DANDIE DINMONT\",\n  \"BOSTON BULL\",\n  \"MINIATURE SCHNAUZER\",\n  \"GIANT SCHNAUZER\",\n  \"STANDARD SCHNAUZER\",\n  \"SCOTCH TERRIER\",\n  \"TIBETAN TERRIER\",\n  \"SILKY TERRIER\",\n  \"WHEATEN TERRIER\",\n  \"WHITE TERRIER\",\n  \"LHASA\",\n  \"RETRIEVER\",\n  \"CURLY-COATED RETRIEVER\",\n  \"GOLDEN RETRIEVER\",\n  \"LABRADOR RETRIEVER\",\n  \"CHESAPEAKE BAY RETRIEVER\",\n  \"SHORT-HAIRED POINTER\",\n  \"VISLA\",\n  \"ENGLISH SETTER\",\n  \"IRISH SETTER\",\n  \"GORDON SETTER\",\n  \"BRITTANY SPANIEL\",\n  \"CLUMBER\",\n  \"ENGLISH SPRINGER\",\n  \"WELSH SPRINGER SPANIEL\",\n  \"COCKER SPANIEL\",\n  \"SUSSEX SPANIEL\",\n  \"IRISH WATERSPANIEL\",\n  \"KUVASZ\",\n  \"SCHIPPERKE\",\n  \"GROENENDAEL\",\n  \"MALINOIS\",\n  \"BRIARD\",\n  \"KELPIE\",\n  \"KOMONDOR\",\n  \"OLD ENGLISH SHEEPDOG\",\n  \"SHETLAND SHEEPDOG\",\n  \"COLLIE\",\n  \"BORDER COLLIE\",\n  \"BOUVIER DES FLANDRES\",\n  \"ROTTWEILER\",\n  \"GERMAN SHEPHERD\",\n  \"DOBERMAN\",\n  \"MINIATURE PINSCHER\",\n  \"GREATER SWISS MOUNTAIN DOG\",\n  \"BERNESE MOUNTAIN DOG\",\n  \"APPENZELLER\",\n  \"ENTLEBUCHER\",\n  \"BOXER\",\n  \"BULL MASTIFF\",\n  \"TIBETAN MASTIFF\",\n  \"FRENCH BULLDOG\",\n  \"GREAT DANE\",\n  \"SAINT BERNARD\",\n  \"ESKIMO DOG\",\n  \"MALAMUTE\",\n  \"SIBERIAN HUSKY\",\n  \"DALMATIAN\",\n  \"AFFENPINSCHER\",\n  \"BASENJI\",\n  \"PUG\",\n  \"LEONBERG\",\n  \"NEWFOUNDLAND\",\n  \"GREAT PYRENEES\",\n  \"SAMOYED\",\n  \"POMERANIAN\",\n  \"CHOW\",\n  \"KEESHOND\",\n  \"BRABANCON GRIFFON\",\n  \"PEMBROKE\",\n  \"CARDIGAN\",\n  \"TOY POODLE\",\n  \"MINIATURE POODLE\",\n  \"STANDARD POODLE\",\n  \"MEXICAN HAIRLESS\",\n  \"TIMBER WOLF\",\n  \"WHITE WOLF\",\n  \"RED WOLF\",\n  \"COYOTE\",\n  \"DINGO\",\n  \"DHOLE\",\n  \"AFRICAN HUNTING DOG\",\n  \"HYENA\",\n  \"RED FOX\",\n  \"KIT FOX\",\n  \"ARCTIC FOX\",\n  \"GREY FOX\",\n  \"TABBY\",\n  \"TIGER CAT\",\n  \"PERSIAN CAT\",\n  \"SIAMESE CAT\",\n  \"EGYPTIAN CAT\",\n  \"COUGAR\",\n  \"LYNX\",\n  \"LEOPARD\",\n  \"SNOW LEOPARD\",\n  \"JAGUAR\",\n  \"LION\",\n  \"TIGER\",\n  \"CHEETAH\",\n  \"BROWN BEAR\",\n  \"AMERICAN BLACK BEAR\",\n  \"ICE BEAR\",\n  \"SLOTH BEAR\",\n  \"MONGOOSE\",\n  \"MEERKAT\",\n  \"TIGER BEETLE\",\n  \"LADYBUG\",\n  \"GROUND BEETLE\",\n  \"LONG-HORNED BEETLE\",\n  \"LEAF BEETLE\",\n  \"DUNG BEETLE\",\n  \"RHINOCEROS BEETLE\",\n  \"WEEVIL\",\n  \"FLY\",\n  \"BEE\",\n  \"ANT\",\n  \"GRASSHOPPER\",\n  \"CRICKET\",\n  \"WALKING STICK\",\n  \"COCKROACH\",\n  \"MANTIS\",\n  \"CICADA\",\n  \"LEAFHOPPER\",\n  \"LACEWING\",\n  \"DRAGONFLY\",\n  \"DAMSELFLY\",\n  \"ADMIRAL\",\n  \"RINGLET\",\n  \"MONARCH\",\n  \"CABBAGE BUTTERFLY\",\n  \"SULPHUR BUTTERFLY\",\n  \"LYCAENID\",\n  \"STARFISH\",\n  \"SEA URCHIN\",\n  \"SEA CUCUMBER\",\n  \"WOOD RABBIT\",\n  \"HARE\",\n  \"ANGORA\",\n  \"HAMSTER\",\n  \"PORCUPINE\",\n  \"FOX SQUIRREL\",\n  \"MARMOT\",\n  \"BEAVER\",\n  \"GUINEA PIG\",\n  \"SORREL\",\n  \"ZEBRA\",\n  \"HOG\",\n  \"WILD BOAR\",\n  \"WARTHOG\",\n  \"HIPPOPOTAMUS\",\n  \"OX\",\n  \"WATER BUFFALO\",\n  \"BISON\",\n  \"RAM\",\n  \"BIGHORN\",\n  \"IBEX\",\n  \"HARTEBEEST\",\n  \"IMPALA\",\n  \"GAZELLE\",\n  \"ARABIAN CAMEL\",\n  \"LLAMA\",\n  \"WEASEL\",\n  \"MINK\",\n  \"POLECAT\",\n  \"BLACK-FOOTED FERRET\",\n  \"OTTER\",\n  \"SKUNK\",\n  \"BADGER\",\n  \"ARMADILLO\",\n  \"THREE-TOED SLOTH\",\n  \"ORANGUTAN\",\n  \"GORILLA\",\n  \"CHIMPANZEE\",\n  \"GIBBON\",\n  \"SIAMANG\",\n  \"GUENON\",\n  \"PATAS\",\n  \"BABOON\",\n  \"MACAQUE\",\n  \"LANGUR\",\n  \"COLOBUS\",\n  \"PROBOSCIS MONKEY\",\n  \"MARMOSET\",\n  \"CAPUCHIN\",\n  \"HOWLER MONKEY\",\n  \"TITI\",\n  \"SPIDER MONKEY\",\n  \"SQUIRREL MONKEY\",\n  \"MADAGASCAR CAT\",\n  \"INDRI\",\n  \"INDIAN ELEPHANT\",\n  \"AFRICAN ELEPHANT\",\n  \"LESSER PANDA\",\n  \"GIANT PANDA\",\n  \"BARRACOUTA\",\n  \"EEL\",\n  \"COHO\",\n  \"ROCK BEAUTY\",\n  \"ANEMONE FISH\",\n  \"STURGEON\",\n  \"GAR\",\n  \"LIONFISH\",\n  \"PUFFER\",\n  \"ABACUS\",\n  \"ABAYA\",\n  \"ACADEMIC GOWN\",\n  \"ACCORDION\",\n  \"ACOUSTIC GUITAR\",\n  \"AIRCRAFT CARRIER\",\n  \"AIRLINER\",\n  \"AIRSHIP\",\n  \"ALTAR\",\n  \"AMBULANCE\",\n  \"AMPHIBIAN\",\n  \"ANALOG CLOCK\",\n  \"APIARY\",\n  \"APRON\",\n  \"ASHCAN\",\n  \"ASSAULT RIFLE\",\n  \"BACKPACK\",\n  \"BAKERY\",\n  \"BALANCE BEAM\",\n  \"BALLOON\",\n  \"BALLPOINT\",\n  \"BAND AID\",\n  \"BANJO\",\n  \"BANNISTER\",\n  \"BARBELL\",\n  \"BARBER CHAIR\",\n  \"BARBERSHOP\",\n  \"BARN\",\n  \"BAROMETER\",\n  \"BARREL\",\n  \"BARROW\",\n  \"BASEBALL\",\n  \"BASKETBALL\",\n  \"BASSINET\",\n  \"BASSOON\",\n  \"BATHING CAP\",\n  \"BATH TOWEL\",\n  \"BATHTUB\",\n  \"BEACH WAGON\",\n  \"BEACON\",\n  \"BEAKER\",\n  \"BEARSKIN\",\n  \"BEER BOTTLE\",\n  \"BEER GLASS\",\n  \"BELL COTE\",\n  \"BIB\",\n  \"BICYCLE-BUILT-FOR-TWO\",\n  \"BIKINI\",\n  \"BINDER\",\n  \"BINOCULARS\",\n  \"BIRDHOUSE\",\n  \"BOATHOUSE\",\n  \"BOBSLED\",\n  \"BOLO TIE\",\n  \"BONNET\",\n  \"BOOKCASE\",\n  \"BOOKSHOP\",\n  \"BOTTLECAP\",\n  \"BOW\",\n  \"BOW TIE\",\n  \"BRASS\",\n  \"BRASSIERE\",\n  \"BREAKWATER\",\n  \"BREASTPLATE\",\n  \"BROOM\",\n  \"BUCKET\",\n  \"BUCKLE\",\n  \"BULLETPROOF VEST\",\n  \"BULLET TRAIN\",\n  \"BUTCHER SHOP\",\n  \"CAB\",\n  \"CALDRON\",\n  \"CANDLE\",\n  \"CANNON\",\n  \"CANOE\",\n  \"CAN OPENER\",\n  \"CARDIGAN\",\n  \"CAR MIRROR\",\n  \"CAROUSEL\",\n  \"CARPENTERS KIT\",\n  \"CARTON\",\n  \"CAR WHEEL\",\n  \"CASH MACHINE\",\n  \"CASSETTE\",\n  \"CASSETTE PLAYER\",\n  \"CASTLE\",\n  \"CATAMARAN\",\n  \"CD PLAYER\",\n  \"CELLO\",\n  \"CELLULAR TELEPHONE\",\n  \"CHAIN\",\n  \"CHAINLINK FENCE\",\n  \"CHAIN MAIL\",\n  \"CHAIN SAW\",\n  \"CHEST\",\n  \"CHIFFONIER\",\n  \"CHIME\",\n  \"CHINA CABINET\",\n  \"CHRISTMAS STOCKING\",\n  \"CHURCH\",\n  \"CINEMA\",\n  \"CLEAVER\",\n  \"CLIFF DWELLING\",\n  \"CLOAK\",\n  \"CLOG\",\n  \"COCKTAIL SHAKER\",\n  \"COFFEE MUG\",\n  \"COFFEEPOT\",\n  \"COIL\",\n  \"COMBINATION LOCK\",\n  \"COMPUTER KEYBOARD\",\n  \"CONFECTIONERY\",\n  \"CONTAINER SHIP\",\n  \"CONVERTIBLE\",\n  \"CORKSCREW\",\n  \"CORNET\",\n  \"COWBOY BOOT\",\n  \"COWBOY HAT\",\n  \"CRADLE\",\n  \"CRANE\",\n  \"CRASH HELMET\",\n  \"CRATE\",\n  \"CRIB\",\n  \"CROCK POT\",\n  \"CROQUET BALL\",\n  \"CRUTCH\",\n  \"CUIRASS\",\n  \"DAM\",\n  \"DESK\",\n  \"DESKTOP COMPUTER\",\n  \"DIAL TELEPHONE\",\n  \"DIAPER\",\n  \"DIGITAL CLOCK\",\n  \"DIGITAL WATCH\",\n  \"DINING TABLE\",\n  \"DISHRAG\",\n  \"DISHWASHER\",\n  \"DISK BRAKE\",\n  \"DOCK\",\n  \"DOGSLED\",\n  \"DOME\",\n  \"DOORMAT\",\n  \"DRILLING PLATFORM\",\n  \"DRUM\",\n  \"DRUMSTICK\",\n  \"DUMBBELL\",\n  \"DUTCH OVEN\",\n  \"ELECTRIC FAN\",\n  \"ELECTRIC GUITAR\",\n  \"ELECTRIC LOCOMOTIVE\",\n  \"ENTERTAINMENT CENTER\",\n  \"ENVELOPE\",\n  \"ESPRESSO MAKER\",\n  \"FACE POWDER\",\n  \"FEATHER BOA\",\n  \"FILE\",\n  \"FIREBOAT\",\n  \"FIRE ENGINE\",\n  \"FIRE SCREEN\",\n  \"FLAGPOLE\",\n  \"FLUTE\",\n  \"FOLDING CHAIR\",\n  \"FOOTBALL HELMET\",\n  \"FORKLIFT\",\n  \"FOUNTAIN\",\n  \"FOUNTAIN PEN\",\n  \"FOUR-POSTER\",\n  \"FREIGHT CAR\",\n  \"FRENCH HORN\",\n  \"FRYING PAN\",\n  \"FUR COAT\",\n  \"GARBAGE TRUCK\",\n  \"GASMASK\",\n  \"GAS PUMP\",\n  \"GOBLET\",\n  \"GO-KART\",\n  \"GOLF BALL\",\n  \"GOLFCART\",\n  \"GONDOLA\",\n  \"GONG\",\n  \"GOWN\",\n  \"GRAND PIANO\",\n  \"GREENHOUSE\",\n  \"GRILLE\",\n  \"GROCERY STORE\",\n  \"GUILLOTINE\",\n  \"HAIR SLIDE\",\n  \"HAIR SPRAY\",\n  \"HALF TRACK\",\n  \"HAMMER\",\n  \"HAMPER\",\n  \"HAND BLOWER\",\n  \"HAND-HELD COMPUTER\",\n  \"HANDKERCHIEF\",\n  \"HARD DISC\",\n  \"HARMONICA\",\n  \"HARP\",\n  \"HARVESTER\",\n  \"HATCHET\",\n  \"HOLSTER\",\n  \"HOME THEATER\",\n  \"HONEYCOMB\",\n  \"HOOK\",\n  \"HOOPSKIRT\",\n  \"HORIZONTAL BAR\",\n  \"HORSE CART\",\n  \"HOURGLASS\",\n  \"IPOD\",\n  \"IRON\",\n  \"JACK-O-LANTERN\",\n  \"JEAN\",\n  \"JEEP\",\n  \"JERSEY\",\n  \"JIGSAW PUZZLE\",\n  \"JINRIKISHA\",\n  \"JOYSTICK\",\n  \"KIMONO\",\n  \"KNEE PAD\",\n  \"KNOT\",\n  \"LAB COAT\",\n  \"LADLE\",\n  \"LAMPSHADE\",\n  \"LAPTOP\",\n  \"LAWN MOWER\",\n  \"LENS CAP\",\n  \"LETTER OPENER\",\n  \"LIBRARY\",\n  \"LIFEBOAT\",\n  \"LIGHTER\",\n  \"LIMOUSINE\",\n  \"LINER\",\n  \"LIPSTICK\",\n  \"LOAFER\",\n  \"LOTION\",\n  \"LOUDSPEAKER\",\n  \"LOUPE\",\n  \"LUMBERMILL\",\n  \"MAGNETIC COMPASS\",\n  \"MAILBAG\",\n  \"MAILBOX\",\n  \"MAILLOT\",\n  \"MAILLOT\",\n  \"MANHOLE COVER\",\n  \"MARACA\",\n  \"MARIMBA\",\n  \"MASK\",\n  \"MATCHSTICK\",\n  \"MAYPOLE\",\n  \"MAZE\",\n  \"MEASURING CUP\",\n  \"MEDICINE CHEST\",\n  \"MEGALITH\",\n  \"MICROPHONE\",\n  \"MICROWAVE\",\n  \"MILITARY UNIFORM\",\n  \"MILK CAN\",\n  \"MINIBUS\",\n  \"MINISKIRT\",\n  \"MINIVAN\",\n  \"MISSILE\",\n  \"MITTEN\",\n  \"MIXING BOWL\",\n  \"MOBILE HOME\",\n  \"MODEL T\",\n  \"MODEM\",\n  \"MONASTERY\",\n  \"MONITOR\",\n  \"MOPED\",\n  \"MORTAR\",\n  \"MORTARBOARD\",\n  \"MOSQUE\",\n  \"MOSQUITO NET\",\n  \"MOTOR SCOOTER\",\n  \"MOUNTAIN BIKE\",\n  \"MOUNTAIN TENT\",\n  \"MOUSE\",\n  \"MOUSETRAP\",\n  \"MOVING VAN\",\n  \"MUZZLE\",\n  \"NAIL\",\n  \"NECK BRACE\",\n  \"NECKLACE\",\n  \"NIPPLE\",\n  \"NOTEBOOK\",\n  \"OBELISK\",\n  \"OBOE\",\n  \"OCARINA\",\n  \"ODOMETER\",\n  \"OIL FILTER\",\n  \"ORGAN\",\n  \"OSCILLOSCOPE\",\n  \"OVERSKIRT\",\n  \"OXCART\",\n  \"OXYGEN MASK\",\n  \"PACKET\",\n  \"PADDLE\",\n  \"PADDLEWHEEL\",\n  \"PADLOCK\",\n  \"PAINTBRUSH\",\n  \"PAJAMA\",\n  \"PALACE\",\n  \"PANPIPE\",\n  \"PAPER TOWEL\",\n  \"PARACHUTE\",\n  \"PARALLEL BARS\",\n  \"PARK BENCH\",\n  \"PARKING METER\",\n  \"PASSENGER CAR\",\n  \"PATIO\",\n  \"PAY-PHONE\",\n  \"PEDESTAL\",\n  \"PENCIL BOX\",\n  \"PENCIL SHARPENER\",\n  \"PERFUME\",\n  \"PETRI DISH\",\n  \"PHOTOCOPIER\",\n  \"PICK\",\n  \"PICKELHAUBE\",\n  \"PICKET FENCE\",\n  \"PICKUP\",\n  \"PIER\",\n  \"PIGGY BANK\",\n  \"PILL BOTTLE\",\n  \"PILLOW\",\n  \"PING-PONG BALL\",\n  \"PINWHEEL\",\n  \"PIRATE\",\n  \"PITCHER\",\n  \"PLANE\",\n  \"PLANETARIUM\",\n  \"PLASTIC BAG\",\n  \"PLATE RACK\",\n  \"PLOW\",\n  \"PLUNGER\",\n  \"POLAROID CAMERA\",\n  \"POLE\",\n  \"POLICE VAN\",\n  \"PONCHO\",\n  \"POOL TABLE\",\n  \"POP BOTTLE\",\n  \"POT\",\n  \"POTTERS WHEEL\",\n  \"POWER DRILL\",\n  \"PRAYER RUG\",\n  \"PRINTER\",\n  \"PRISON\",\n  \"PROJECTILE\",\n  \"PROJECTOR\",\n  \"PUCK\",\n  \"PUNCHING BAG\",\n  \"PURSE\",\n  \"QUILL\",\n  \"QUILT\",\n  \"RACER\",\n  \"RACKET\",\n  \"RADIATOR\",\n  \"RADIO\",\n  \"RADIO TELESCOPE\",\n  \"RAIN BARREL\",\n  \"RECREATIONAL VEHICLE\",\n  \"REEL\",\n  \"REFLEX CAMERA\",\n  \"REFRIGERATOR\",\n  \"REMOTE CONTROL\",\n  \"RESTAURANT\",\n  \"REVOLVER\",\n  \"RIFLE\",\n  \"ROCKING CHAIR\",\n  \"ROTISSERIE\",\n  \"RUBBER ERASER\",\n  \"RUGBY BALL\",\n  \"RULE\",\n  \"RUNNING SHOE\",\n  \"SAFE\",\n  \"SAFETY PIN\",\n  \"SALTSHAKER\",\n  \"SANDAL\",\n  \"SARONG\",\n  \"SAX\",\n  \"SCABBARD\",\n  \"SCALE\",\n  \"SCHOOL BUS\",\n  \"SCHOONER\",\n  \"SCOREBOARD\",\n  \"SCREEN\",\n  \"SCREW\",\n  \"SCREWDRIVER\",\n  \"SEAT BELT\",\n  \"SEWING MACHINE\",\n  \"SHIELD\",\n  \"SHOE SHOP\",\n  \"SHOJI\",\n  \"SHOPPING BASKET\",\n  \"SHOPPING CART\",\n  \"SHOVEL\",\n  \"SHOWER CAP\",\n  \"SHOWER CURTAIN\",\n  \"SKI\",\n  \"SKI MASK\",\n  \"SLEEPING BAG\",\n  \"SLIDE RULE\",\n  \"SLIDING DOOR\",\n  \"SLOT\",\n  \"SNORKEL\",\n  \"SNOWMOBILE\",\n  \"SNOWPLOW\",\n  \"SOAP DISPENSER\",\n  \"SOCCER BALL\",\n  \"SOCK\",\n  \"SOLAR DISH\",\n  \"SOMBRERO\",\n  \"SOUP BOWL\",\n  \"SPACE BAR\",\n  \"SPACE HEATER\",\n  \"SPACE SHUTTLE\",\n  \"SPATULA\",\n  \"SPEEDBOAT\",\n  \"SPIDER WEB\",\n  \"SPINDLE\",\n  \"SPORTS CAR\",\n  \"SPOTLIGHT\",\n  \"STAGE\",\n  \"STEAM LOCOMOTIVE\",\n  \"STEEL ARCH BRIDGE\",\n  \"STEEL DRUM\",\n  \"STETHOSCOPE\",\n  \"STOLE\",\n  \"STONE WALL\",\n  \"STOPWATCH\",\n  \"STOVE\",\n  \"STRAINER\",\n  \"STREETCAR\",\n  \"STRETCHER\",\n  \"STUDIO COUCH\",\n  \"STUPA\",\n  \"SUBMARINE\",\n  \"SUIT\",\n  \"SUNDIAL\",\n  \"SUNGLASS\",\n  \"SUNGLASSES\",\n  \"SUNSCREEN\",\n  \"SUSPENSION BRIDGE\",\n  \"SWAB\",\n  \"SWEATSHIRT\",\n  \"SWIMMING TRUNKS\",\n  \"SWING\",\n  \"SWITCH\",\n  \"SYRINGE\",\n  \"TABLE LAMP\",\n  \"TANK\",\n  \"TAPE PLAYER\",\n  \"TEAPOT\",\n  \"TEDDY\",\n  \"TELEVISION\",\n  \"TENNIS BALL\",\n  \"THATCH\",\n  \"THEATER CURTAIN\",\n  \"THIMBLE\",\n  \"THRESHER\",\n  \"THRONE\",\n  \"TILE ROOF\",\n  \"TOASTER\",\n  \"TOBACCO SHOP\",\n  \"TOILET SEAT\",\n  \"TORCH\",\n  \"TOTEM POLE\",\n  \"TOW TRUCK\",\n  \"TOYSHOP\",\n  \"TRACTOR\",\n  \"TRAILER TRUCK\",\n  \"TRAY\",\n  \"TRENCH COAT\",\n  \"TRICYCLE\",\n  \"TRIMARAN\",\n  \"TRIPOD\",\n  \"TRIUMPHAL ARCH\",\n  \"TROLLEYBUS\",\n  \"TROMBONE\",\n  \"TUB\",\n  \"TURNSTILE\",\n  \"TYPEWRITER KEYBOARD\",\n  \"UMBRELLA\",\n  \"UNICYCLE\",\n  \"UPRIGHT\",\n  \"VACUUM\",\n  \"VASE\",\n  \"VAULT\",\n  \"VELVET\",\n  \"VENDING MACHINE\",\n  \"VESTMENT\",\n  \"VIADUCT\",\n  \"VIOLIN\",\n  \"VOLLEYBALL\",\n  \"WAFFLE IRON\",\n  \"WALL CLOCK\",\n  \"WALLET\",\n  \"WARDROBE\",\n  \"WARPLANE\",\n  \"WASHBASIN\",\n  \"WASHER\",\n  \"WATER BOTTLE\",\n  \"WATER JUG\",\n  \"WATER TOWER\",\n  \"WHISKEY JUG\",\n  \"WHISTLE\",\n  \"WIG\",\n  \"WINDOW SCREEN\",\n  \"WINDOW SHADE\",\n  \"WINDSOR TIE\",\n  \"WINE BOTTLE\",\n  \"WING\",\n  \"WOK\",\n  \"WOODEN SPOON\",\n  \"WOOL\",\n  \"WORM FENCE\",\n  \"WRECK\",\n  \"YAWL\",\n  \"YURT\",\n  \"WEB SITE\",\n  \"COMIC BOOK\",\n  \"CROSSWORD PUZZLE\",\n  \"STREET SIGN\",\n  \"TRAFFIC LIGHT\",\n  \"BOOK JACKET\",\n  \"MENU\",\n  \"PLATE\",\n  \"GUACAMOLE\",\n  \"CONSOMME\",\n  \"HOT POT\",\n  \"TRIFLE\",\n  \"ICE CREAM\",\n  \"ICE LOLLY\",\n  \"FRENCH LOAF\",\n  \"BAGEL\",\n  \"PRETZEL\",\n  \"CHEESEBURGER\",\n  \"HOTDOG\",\n  \"MASHED POTATO\",\n  \"HEAD CABBAGE\",\n  \"BROCCOLI\",\n  \"CAULIFLOWER\",\n  \"ZUCCHINI\",\n  \"SPAGHETTI SQUASH\",\n  \"ACORN SQUASH\",\n  \"BUTTERNUT SQUASH\",\n  \"CUCUMBER\",\n  \"ARTICHOKE\",\n  \"BELL PEPPER\",\n  \"CARDOON\",\n  \"MUSHROOM\",\n  \"GRANNY SMITH\",\n  \"STRAWBERRY\",\n  \"ORANGE\",\n  \"LEMON\",\n  \"FIG\",\n  \"PINEAPPLE\",\n  \"BANANA\",\n  \"JACKFRUIT\",\n  \"CUSTARD APPLE\",\n  \"POMEGRANATE\",\n  \"HAY\",\n  \"CARBONARA\",\n  \"CHOCOLATE SAUCE\",\n  \"DOUGH\",\n  \"MEAT LOAF\",\n  \"PIZZA\",\n  \"POTPIE\",\n  \"BURRITO\",\n  \"RED WINE\",\n  \"ESPRESSO\",\n  \"CUP\",\n  \"EGGNOG\",\n  \"ALP\",\n  \"BUBBLE\",\n  \"CLIFF\",\n  \"CORAL REEF\",\n  \"GEYSER\",\n  \"LAKESIDE\",\n  \"PROMONTORY\",\n  \"SANDBAR\",\n  \"SEASHORE\",\n  \"VALLEY\",\n  \"VOLCANO\",\n  \"BALLPLAYER\",\n  \"GROOM\",\n  \"SCUBA DIVER\",\n  \"RAPESEED\",\n  \"DAISY\",\n  \"LADY SLIPPER\",\n  \"CORN\",\n  \"ACORN\",\n  \"HIP\",\n  \"BUCKEYE\",\n  \"CORAL FUNGUS\",\n  \"AGARIC\",\n  \"GYROMITRA\",\n  \"STINKHORN\",\n  \"EARTHSTAR\",\n  \"HEN-OF-THE-WOODS\",\n  \"BOLETE\",\n  \"EAR\",\n  \"TOILET TISSUE\",\n];\n", "import { Tensor, TensorType } from \"../tensor\";\nimport { AiTask } from \"../ai\";\nimport { resnetLabels } from \"./data/labels\";\n\nexport type AiImageClassificationInput = {\n  image: number[];\n};\n\nexport type AiImageClassificationOutput = {\n  score?: number;\n  label?: string;\n}[];\n\nexport class AiImageClassification implements AiTask {\n  private modelSettings: any;\n  public inputs: AiImageClassificationInput;\n  public preProcessedInputs: any;\n  public postProcessedOutputs: AiImageClassificationOutput;\n  public tensors: Array<Tensor<any>>;\n  // run ./scripts/gen-validators.ts if you change the schema\n  public schema = {\n    input: {\n      oneOf: [\n        { type: \"string\", format: \"binary\" },\n        {\n          type: \"object\",\n          properties: {\n            image: {\n              type: \"array\",\n              items: {\n                type: \"number\",\n              },\n            },\n          },\n        },\n      ],\n    },\n    output: {\n      type: \"array\",\n      contentType: \"application/json\",\n      items: {\n        type: \"object\",\n        properties: {\n          score: {\n            type: \"number\",\n          },\n          label: {\n            type: \"string\",\n          },\n        },\n      },\n    },\n  };\n\n  constructor(inputs: AiImageClassificationInput, modelSettings: any) {\n    this.inputs = inputs;\n    this.modelSettings = modelSettings;\n  }\n\n  preProcessing() {\n    this.preProcessedInputs = this.inputs;\n  }\n\n  generateTensors() {\n    this.tensors = [\n      new Tensor(TensorType.Uint8, this.preProcessedInputs.image, {\n        shape: [1, this.preProcessedInputs.image.length],\n        name: \"input\",\n      }),\n    ];\n  }\n\n  postProcessing(response: any) {\n    const labels = [];\n    const scores = response.output.value[0];\n    for (var s in scores) labels.push({ label: resnetLabels[s], score: scores[s] });\n    labels.sort((a, b) => {\n      return b.score - a.score;\n    });\n    this.postProcessedOutputs = labels.slice(0, 5);\n  }\n}\n", "import { Tensor, TensorType } from \"../tensor\";\nimport { AiTask } from \"../ai\";\n\nexport type AiObjectDetectionInput = {\n  image: number[];\n};\n\nexport type AiObjectDetectionOutput = {\n  score?: number;\n  label?: string;\n}[];\n\nexport class AiObjectDetection implements AiTask {\n  private modelSettings: any;\n  public inputs: AiObjectDetectionInput;\n  public preProcessedInputs: any;\n  public postProcessedOutputs: AiObjectDetectionOutput;\n  public tensors: Array<Tensor<any>>;\n  // run ./scripts/gen-validators.ts if you change the schema\n  public schema = {\n    input: {\n      oneOf: [\n        { type: \"string\", format: \"binary\" },\n        {\n          type: \"object\",\n          properties: {\n            image: {\n              type: \"array\",\n              items: {\n                type: \"number\",\n              },\n            },\n          },\n        },\n      ],\n    },\n    output: {\n      type: \"array\",\n      contentType: \"application/json\",\n      items: {\n        type: \"object\",\n        properties: {\n          score: {\n            type: \"number\",\n          },\n          label: {\n            type: \"string\",\n          },\n          box: {\n            type: \"object\",\n            properties: {\n              xmin: {\n                type: \"number\",\n              },\n              ymin: {\n                type: \"number\",\n              },\n              xmax: {\n                type: \"number\",\n              },\n              ymax: {\n                type: \"number\",\n              },\n            },\n          },\n        },\n      },\n    },\n  };\n\n  constructor(inputs: AiObjectDetectionInput, modelSettings: any) {\n    this.inputs = inputs;\n    this.modelSettings = modelSettings;\n  }\n\n  preProcessing() {\n    this.preProcessedInputs = this.inputs;\n  }\n\n  generateTensors() {\n    this.tensors = [\n      new Tensor(TensorType.Uint8, this.preProcessedInputs.image, {\n        shape: [1, this.preProcessedInputs.image.length],\n        name: \"input\",\n      }),\n    ];\n  }\n\n  postProcessing(response: any) {\n    const scores = response.scores.value[0].map((score: any, i: number) => {\n      return {\n        score: score,\n        label: response.name.value[response.labels.value[0][i]],\n        box: {\n          xmin: response.boxes.value[0][i][0],\n          ymin: response.boxes.value[0][i][1],\n          xmax: response.boxes.value[0][i][2],\n          ymax: response.boxes.value[0][i][3],\n        },\n      };\n    });\n    this.postProcessedOutputs = scores.sort((a: any, b: any) => {\n      return b.score - a.score;\n    });\n  }\n}\n", "import { Tensor, TensorType } from \"../tensor\";\nimport { AiTask } from \"../ai\";\n\nexport type AiTextToImageInput = {\n  prompt: string;\n  num_steps?: number;\n};\n\nexport type AiTextToImageOutput = Uint8Array;\n\nexport class AiTextToImage implements AiTask {\n  private modelSettings: any;\n  public inputs: AiTextToImageInput;\n  public preProcessedInputs: any;\n  public postProcessedOutputs: AiTextToImageOutput;\n  public tensors: Array<Tensor<any>>;\n  // run ./scripts/gen-validators.ts if you change the schema\n  public schema = {\n    input: {\n      type: \"object\",\n      properties: {\n        prompt: {\n          type: \"string\",\n        },\n        num_steps: {\n          type: \"integer\",\n          default: 20,\n          maximum: 20,\n        },\n      },\n      required: [\"prompt\"],\n    },\n    output: {\n      type: \"string\",\n      contentType: \"image/png\",\n      format: \"binary\",\n    },\n  };\n\n  constructor(inputs: AiTextToImageInput, modelSettings: any) {\n    this.inputs = inputs;\n    this.modelSettings = modelSettings;\n  }\n\n  preProcessing() {\n    this.preProcessedInputs = this.inputs;\n  }\n\n  generateTensors() {\n    this.tensors = [\n      new Tensor(TensorType.String, [this.preProcessedInputs.prompt], {\n        shape: [1],\n        name: \"input_text\",\n      }),\n      new Tensor(TensorType.Int32, [this.preProcessedInputs.num_steps], {\n        shape: [1],\n        name: \"num_steps\",\n      }),\n    ];\n  }\n\n  postProcessing(response: any) {\n    this.postProcessedOutputs = new Uint8Array(response.output_image.value);\n  }\n}\n", "import { Tensor, TensorType } from \"../tensor\";\nimport { AiTask } from \"../ai\";\n\nexport type AiSentenceSimilarityInput = {\n  source: string;\n  sentences: string[];\n};\n\nexport type AiSentenceSimilarityOutput = number[];\n\nexport class AiSentenceSimilarity implements AiTask {\n  public inputs: AiSentenceSimilarityInput;\n  public preProcessedInputs: any;\n  public postProcessedOutputs: AiSentenceSimilarityOutput;\n  public tensors: Array<Tensor<any>>;\n  // run ./scripts/gen-validators.ts if you change the schema\n  public schema = {\n    input: {\n      type: \"object\",\n      properties: {\n        source: {\n          type: \"string\",\n        },\n        sentences: {\n          type: \"array\",\n          items: {\n            type: \"string\",\n          },\n        },\n      },\n      required: [\"source\", \"sentences\"],\n    },\n    output: {\n      type: \"array\",\n      contentType: \"application/json\",\n      items: {\n        type: \"number\",\n      },\n    },\n  };\n\n  constructor(inputs: AiSentenceSimilarityInput) {\n    this.inputs = inputs;\n  }\n\n  preProcessing() {\n    this.preProcessedInputs = this.inputs;\n  }\n\n  generateTensors() {\n    this.tensors = [\n      new Tensor(TensorType.String, [this.preProcessedInputs.source], {\n        shape: [1],\n        name: \"source_sentence\",\n      }),\n      new Tensor(TensorType.String, this.preProcessedInputs.sentences, {\n        shape: [this.preProcessedInputs.sentences.length],\n        name: \"sentences\",\n      }),\n    ];\n  }\n\n  postProcessing(response: any) {\n    this.postProcessedOutputs = response.scores.value;\n  }\n}\n", "import { AiTextGeneration } from \"./tasks/text-generation\";\nimport { AiTextClassification } from \"./tasks/text-classification\";\nimport { AiTextEmbeddings } from \"./tasks/text-embeddings\";\nimport { AiTranslation } from \"./tasks/translation\";\nimport { AiSpeechRecognition } from \"./tasks/speech-recognition\";\nimport { AiImageClassification } from \"./tasks/image-classification\";\nimport { AiObjectDetection } from \"./tasks/object-detection\";\nimport { AiTextToImage } from \"./tasks/text-to-image\";\nimport { AiSentenceSimilarity } from \"./tasks/sentence-similarity\";\n\nconst chatDefaultContext =\n  \"A chat between a curious human and an artificial intelligence assistant. The assistant gives helpful, detailed, and polite answers to the human's questions.\";\nconst codeDefaultContext =\n  \"Write code to solve the following coding problem that obeys the constraints and passes the example test cases. Please wrap your code answer using   ```:\";\n\nexport const modelMappings = {\n  \"text-classification\": {\n    models: [\"@cf/huggingface/distilbert-sst-2-int8\"],\n    class: AiTextClassification,\n    id: \"19606750-23ed-4371-aab2-c20349b53a60\",\n  },\n  \"text-to-image\": {\n    models: [\"@cf/stabilityai/stable-diffusion-xl-base-1.0\",\"@cf/runwayml/stable-diffusion-v1-5\"],\n    class: AiTextToImage,\n    id: \"3d6e1f35-341b-4915-a6c8-9a7142a9033a\",\n  },\n  \"sentence-similarity\": {\n    models: [\"@hf/sentence-transformers/all-minilm-l6-v2\"],\n    class: AiSentenceSimilarity,\n    id: \"69bf4e84-441e-401a-bdfc-256fd54d0fff\",\n  },\n  \"text-embeddings\": {\n    models: [\n      \"@cf/baai/bge-small-en-v1.5\",\n      \"@cf/baai/bge-base-en-v1.5\",\n      \"@cf/baai/bge-large-en-v1.5\",\n      \"@hf/baai/bge-base-en-v1.5\",\n    ],\n    class: AiTextEmbeddings,\n    id: \"0137cdcf-162a-4108-94f2-1ca59e8c65ee\",\n  },\n  \"speech-recognition\": {\n    models: [\"@cf/openai/whisper\"],\n    class: AiSpeechRecognition,\n    id: \"dfce1c48-2a81-462e-a7fd-de97ce985207\",\n  },\n  \"image-classification\": {\n    models: [\"@cf/microsoft/resnet-50\"],\n    class: AiImageClassification,\n    id: \"00cd182b-bf30-4fc4-8481-84a3ab349657\",\n  },\n  \"object-detection\": {\n    models: [\"@cf/facebook/detr-resnet-50\"],\n    class: AiObjectDetection,\n    id: \"9c178979-90d9-49d8-9e2c-0f1cf01815d4\",\n  },\n  \"text-generation\": {\n    models: [\n      \"@cf/meta/llama-2-7b-chat-int8\",\n      \"@cf/mistral/mistral-7b-instruct-v0.1\",\n      \"@cf/meta/llama-2-7b-chat-fp16\",\n      \"@hf/thebloke/llama-2-13b-chat-awq\",\n      \"@hf/thebloke/zephyr-7b-beta-awq\",\n      \"@hf/thebloke/mistral-7b-instruct-v0.1-awq\",\n      \"@hf/thebloke/codellama-7b-instruct-awq\",\n      \"@hf/thebloke/openchat_3.5-awq\",\n      \"@hf/thebloke/openhermes-2.5-mistral-7b-awq\",\n      \"@hf/thebloke/starling-lm-7b-alpha-awq\",\n      \"@hf/thebloke/orca-2-13b-awq\",\n      \"@hf/thebloke/neural-chat-7b-v3-1-awq\",\n      \"@hf/thebloke/llamaguard-7b-awq\",\n      \"@hf/thebloke/deepseek-coder-6.7b-base-awq\",\n      \"@hf/thebloke/deepseek-coder-6.7b-instruct-awq\",\n    ],\n    class: AiTextGeneration,\n    id: \"c329a1f9-323d-4e91-b2aa-582dd4188d34\",\n  },\n  translation: {\n    models: [\"@cf/meta/m2m100-1.2b\"],\n    class: AiTranslation,\n    id: \"f57d07cb-9087-487a-bbbf-bc3e17fecc4b\",\n  },\n} as const;\n\n/*\n * Model settings:\n *\n * experimental: excluded from config-api and devdocs if true\n * preProcessingArgs: per-model pre-processing arguments\n * inputsDefaults: per-model inputs defaults\n * inputsDefaultsStream: per-model inputs defaults when stream is used\n *\n */\n\nconst tgiPostProc = (response: any, ignoreTokens?: any) => {\n  let r = response[\"generated_text\"].value[0];\n  if (ignoreTokens) {\n    for (var i in ignoreTokens) r = r.replace(ignoreTokens[i], \"\");\n  }\n  return r;\n};\n\nexport const modelSettings = {\n  \"@hf/sentence-transformers/all-minilm-l6-v2\": {\n    experimental: true,\n  },\n  \"@hf/baai/bge-base-en-v1.5\": {\n    postProcessingFunc: (r: any) => {\n      return {\n        shape: r.data.shape,\n        data: r.data.value,\n      };\n    },\n  },\n  \"@hf/thebloke/deepseek-coder-6.7b-instruct-awq\": {\n    inputsDefaultsStream: {\n      max_tokens: 512,\n    },\n    inputsDefaults: {\n      max_tokens: 256,\n    },\n    preProcessingArgs: {\n      promptTemplate: \"deepseek\",\n      defaultContext: codeDefaultContext,\n    },\n    postProcessingFunc: (r: any) => tgiPostProc(r, [\"<|EOT|>\"]),\n    postProcessingFuncStream: (r: any) => tgiPostProc(r, [\"<|EOT|>\"]),\n  },\n  \"@hf/thebloke/deepseek-coder-6.7b-base-awq\": {\n    inputsDefaultsStream: {\n      max_tokens: 512,\n    },\n    inputsDefaults: {\n      max_tokens: 256,\n    },\n    preProcessingArgs: {\n      promptTemplate: \"bare\",\n      defaultContext: codeDefaultContext,\n    },\n    postProcessingFunc: tgiPostProc,\n    postProcessingFuncStream: tgiPostProc,\n  },\n  \"@hf/thebloke/llamaguard-7b-awq\": {\n    inputsDefaultsStream: {\n      max_tokens: 512,\n    },\n    inputsDefaults: {\n      max_tokens: 256,\n    },\n    preProcessingArgs: {\n      promptTemplate: \"inst\",\n      defaultContext: chatDefaultContext,\n    },\n    postProcessingFunc: tgiPostProc,\n    postProcessingFuncStream: tgiPostProc,\n  },\n  \"@hf/thebloke/openchat_3.5-awq\": {\n    experimental: true,\n    inputsDefaultsStream: {\n      max_tokens: 512,\n    },\n    inputsDefaults: {\n      max_tokens: 256,\n    },\n    preProcessingArgs: {\n      promptTemplate: \"openchat\",\n      defaultContext: chatDefaultContext,\n    },\n    postProcessingFunc: tgiPostProc,\n    postProcessingFuncStream: tgiPostProc,\n  },\n  \"@hf/thebloke/openhermes-2.5-mistral-7b-awq\": {\n    inputsDefaultsStream: {\n      max_tokens: 512,\n    },\n    inputsDefaults: {\n      max_tokens: 256,\n    },\n    preProcessingArgs: {\n      promptTemplate: \"chatml\",\n      defaultContext: chatDefaultContext,\n    },\n    postProcessingFunc: (r: any) => tgiPostProc(r, [\"<|im_end|>\"]),\n    postProcessingFuncStream: (r: any) => tgiPostProc(r, [\"<|im_end|>\"]),\n  },\n  \"@hf/thebloke/starling-lm-7b-alpha-awq\": {\n    experimental: true,\n    inputsDefaultsStream: {\n      max_tokens: 512,\n    },\n    inputsDefaults: {\n      max_tokens: 256,\n    },\n    preProcessingArgs: {\n      promptTemplate: \"openchat\",\n      defaultContext: chatDefaultContext,\n    },\n    postProcessingFunc: (r: any) => tgiPostProc(r, [\"<|end_of_turn|>\"]),\n    postProcessingFuncStream: (r: any) => tgiPostProc(r, [\"<|end_of_turn|>\"]),\n  },\n  \"@hf/thebloke/orca-2-13b-awq\": {\n    experimental: true,\n    inputsDefaultsStream: {\n      max_tokens: 512,\n    },\n    inputsDefaults: {\n      max_tokens: 256,\n    },\n    preProcessingArgs: {\n      promptTemplate: \"chatml\",\n      defaultContext: chatDefaultContext,\n    },\n    postProcessingFunc: tgiPostProc,\n    postProcessingFuncStream: tgiPostProc,\n  },\n  \"@hf/thebloke/neural-chat-7b-v3-1-awq\": {\n    inputsDefaultsStream: {\n      max_tokens: 512,\n    },\n    inputsDefaults: {\n      max_tokens: 256,\n    },\n    preProcessingArgs: {\n      promptTemplate: \"orca-hashes\",\n      defaultContext: chatDefaultContext,\n    },\n    postProcessingFunc: tgiPostProc,\n    postProcessingFuncStream: tgiPostProc,\n  },\n  \"@hf/thebloke/llama-2-13b-chat-awq\": {\n    inputsDefaultsStream: {\n      max_tokens: 512,\n    },\n    inputsDefaults: {\n      max_tokens: 256,\n    },\n    preProcessingArgs: {\n      promptTemplate: \"llama2\",\n      defaultContext: chatDefaultContext,\n    },\n    postProcessingFunc: tgiPostProc,\n    postProcessingFuncStream: tgiPostProc,\n  },\n  \"@hf/thebloke/zephyr-7b-beta-awq\": {\n    inputsDefaultsStream: {\n      max_tokens: 596,\n    },\n    inputsDefaults: {\n      max_tokens: 256,\n    },\n    preProcessingArgs: {\n      promptTemplate: \"zephyr\",\n      defaultContext: chatDefaultContext,\n    },\n    postProcessingFunc: tgiPostProc,\n    postProcessingFuncStream: tgiPostProc,\n  },\n  \"@hf/thebloke/mistral-7b-instruct-v0.1-awq\": {\n    inputsDefaultsStream: {\n      max_tokens: 596,\n    },\n    inputsDefaults: {\n      max_tokens: 256,\n    },\n    preProcessingArgs: {\n      promptTemplate: \"mistral-instruct\",\n      defaultContext: chatDefaultContext,\n    },\n    postProcessingFunc: tgiPostProc,\n    postProcessingFuncStream: tgiPostProc,\n  },\n  \"@hf/thebloke/codellama-7b-instruct-awq\": {\n    inputsDefaultsStream: {\n      max_tokens: 596,\n    },\n    inputsDefaults: {\n      max_tokens: 256,\n    },\n    preProcessingArgs: {\n      promptTemplate: \"llama2\",\n      defaultContext: codeDefaultContext,\n    },\n    postProcessingFunc: tgiPostProc,\n    postProcessingFuncStream: tgiPostProc,\n  },\n  \"@cf/meta/llama-2-7b-chat-fp16\": {\n    inputsDefaultsStream: {\n      max_tokens: 2500,\n    },\n    inputsDefaults: {\n      max_tokens: 256,\n    },\n    preProcessingArgs: {\n      promptTemplate: \"llama2\",\n      defaultContext: chatDefaultContext,\n    },\n  },\n  \"@cf/meta/llama-2-7b-chat-int8\": {\n    inputsDefaultsStream: {\n      max_tokens: 1800,\n    },\n    inputsDefaults: {\n      max_tokens: 256,\n    },\n    preProcessingArgs: {\n      promptTemplate: \"llama2\",\n      defaultContext: chatDefaultContext,\n    },\n  },\n  \"@cf/openai/whisper\": {\n    postProcessingFunc: (response: any) => {\n      // new whiser\n      if (response[\"word_count\"]) {\n        return {\n          text: response[\"name\"].value.join(\"\").trim(),\n          word_count: parseInt(response[\"word_count\"].value),\n          words: response[\"name\"].value.map((w: any, i: number) => {\n            return {\n              word: w.trim(),\n              start: response[\"timestamps\"].value[0][i][0],\n              end: response[\"timestamps\"].value[0][i][1],\n            };\n          }),\n        };\n      } else {\n        return {\n          text: response[\"name\"].value.join(\"\").trim(),\n        };\n      }\n    },\n  },\n  \"@cf/mistral/mistral-7b-instruct-v0.1\": {\n    inputsDefaultsStream: {\n      max_tokens: 1800,\n    },\n    inputsDefaults: {\n      max_tokens: 256,\n    },\n    preProcessingArgs: {\n      promptTemplate: \"mistral-instruct\",\n      defaultContext: chatDefaultContext,\n    },\n  },\n};\n\n// tests need this\nexport const addModel = (task: string, model: string, settings: any) => {\n  modelMappings[task].models.push(model);\n  modelSettings[model] = settings;\n};\n", "import { modelSettings } from \"./catalog\";\nimport { Tensor, TensorsObject } from \"./tensor\";\n\nexport const debugLog = (dd: Boolean, what: string, args: any) => {\n  if (dd) {\n    console.log(`\\u001b[1m${what}`);\n    if (args[0] !== false) {\n      if (typeof args == \"object\" || Array.isArray(args)) {\n        const json = JSON.stringify(args);\n        console.log(json.length > 512 ? `${json.substring(0, 512)}...` : json);\n      } else {\n        console.log(args);\n      }\n    }\n  }\n};\n\nexport const parseInputs = (inputs: any) => {\n  if (Array.isArray(inputs)) {\n    return inputs.map((input) => input.toJSON());\n  }\n  if (inputs !== null && typeof inputs === \"object\") {\n    return Object.keys(inputs).map((key) => {\n      let tensor = inputs[key].toJSON();\n      tensor.name = key;\n      return tensor;\n    });\n  }\n  throw new Error(`invalid inputs, must be Array<Tensor<any>> | TensorsObject`);\n};\n\nexport const tensorByName = (result: any) => {\n  const outputByName: TensorsObject = {};\n  for (let i = 0, len = result.length; i < len; i++) {\n    const tensor = Tensor.fromJSON(result[i]);\n    const name = tensor.name || \"output\" + i;\n    outputByName[name] = tensor;\n  }\n  return outputByName;\n};\n\nexport const getModelSettings = (model: string, key?: string) => {\n  const models = Object.keys(modelSettings);\n  for (var m in models) {\n    if (models[m] == model) {\n      return key ? modelSettings[models[m]][key] : modelSettings[models[m]];\n    }\n  }\n  return false;\n};\n\n// simplified code from https://github.com/rexxars/eventsource-parser\n\nexport interface EventSourceParser {\n  feed(chunk: string): void;\n  reset(): void;\n}\n\nexport interface ParsedEvent {\n  type: \"event\";\n  event?: string;\n  id?: string;\n  data: string;\n}\n\nexport interface ReconnectInterval {\n  type: \"reconnect-interval\";\n  value: number;\n}\n\nexport type ParseEvent = ParsedEvent | ReconnectInterval;\nexport type EventSourceParseCallback = (event: ParseEvent) => void;\n\nexport class EventSourceParserStream extends TransformStream<string, ParsedEvent> {\n  constructor() {\n    let parser!: EventSourceParser;\n\n    super({\n      start(controller) {\n        parser = createParser((event: any) => {\n          if (event.type === \"event\") {\n            controller.enqueue(event);\n          }\n        });\n      },\n      transform(chunk) {\n        parser.feed(chunk);\n      },\n    });\n  }\n}\n\nconst BOM = [239, 187, 191];\n\nfunction hasBom(buffer: string) {\n  return BOM.every((charCode: number, index: number) => buffer.charCodeAt(index) === charCode);\n}\n\nexport function createParser(onParse: EventSourceParseCallback): EventSourceParser {\n  // Processing state\n  let isFirstChunk: boolean;\n  let buffer: string;\n  let startingPosition: number;\n  let startingFieldLength: number;\n\n  // Event state\n  let eventId: string | undefined;\n  let eventName: string | undefined;\n  let data: string;\n\n  reset();\n  return { feed, reset };\n\n  function reset(): void {\n    isFirstChunk = true;\n    buffer = \"\";\n    startingPosition = 0;\n    startingFieldLength = -1;\n\n    eventId = undefined;\n    eventName = undefined;\n    data = \"\";\n  }\n\n  function feed(chunk: string): void {\n    buffer = buffer ? buffer + chunk : chunk;\n\n    // Strip any UTF8 byte order mark (BOM) at the start of the stream.\n    // Note that we do not strip any non - UTF8 BOM, as eventsource streams are\n    // always decoded as UTF8 as per the specification.\n    if (isFirstChunk && hasBom(buffer)) {\n      buffer = buffer.slice(BOM.length);\n    }\n\n    isFirstChunk = false;\n\n    // Set up chunk-specific processing state\n    const length = buffer.length;\n    let position = 0;\n    let discardTrailingNewline = false;\n\n    // Read the current buffer byte by byte\n    while (position < length) {\n      // EventSource allows for carriage return + line feed, which means we\n      // need to ignore a linefeed character if the previous character was a\n      // carriage return\n      // @todo refactor to reduce nesting, consider checking previous byte?\n      // @todo but consider multiple chunks etc\n      if (discardTrailingNewline) {\n        if (buffer[position] === \"\\n\") {\n          ++position;\n        }\n        discardTrailingNewline = false;\n      }\n\n      let lineLength = -1;\n      let fieldLength = startingFieldLength;\n      let character: string;\n\n      for (let index = startingPosition; lineLength < 0 && index < length; ++index) {\n        character = buffer[index];\n        if (character === \":\" && fieldLength < 0) {\n          fieldLength = index - position;\n        } else if (character === \"\\r\") {\n          discardTrailingNewline = true;\n          lineLength = index - position;\n        } else if (character === \"\\n\") {\n          lineLength = index - position;\n        }\n      }\n\n      if (lineLength < 0) {\n        startingPosition = length - position;\n        startingFieldLength = fieldLength;\n        break;\n      } else {\n        startingPosition = 0;\n        startingFieldLength = -1;\n      }\n\n      parseEventStreamLine(buffer, position, fieldLength, lineLength);\n\n      position += lineLength + 1;\n    }\n\n    if (position === length) {\n      // If we consumed the entire buffer to read the event, reset the buffer\n      buffer = \"\";\n    } else if (position > 0) {\n      // If there are bytes left to process, set the buffer to the unprocessed\n      // portion of the buffer only\n      buffer = buffer.slice(position);\n    }\n  }\n\n  function parseEventStreamLine(lineBuffer: string, index: number, fieldLength: number, lineLength: number) {\n    if (lineLength === 0) {\n      // We reached the last line of this event\n      if (data.length > 0) {\n        onParse({\n          type: \"event\",\n          id: eventId,\n          event: eventName || undefined,\n          data: data.slice(0, -1), // remove trailing newline\n        });\n\n        data = \"\";\n        eventId = undefined;\n      }\n      eventName = undefined;\n      return;\n    }\n\n    const noValue = fieldLength < 0;\n    const field = lineBuffer.slice(index, index + (noValue ? lineLength : fieldLength));\n    let step = 0;\n\n    if (noValue) {\n      step = lineLength;\n    } else if (lineBuffer[index + fieldLength + 1] === \" \") {\n      step = fieldLength + 2;\n    } else {\n      step = fieldLength + 1;\n    }\n\n    const position = index + step;\n    const valueLength = lineLength - step;\n    const value = lineBuffer.slice(position, position + valueLength).toString();\n\n    if (field === \"data\") {\n      data += value ? `${value}\\n` : \"\\n\";\n    } else if (field === \"event\") {\n      eventName = value;\n    } else if (field === \"id\" && !value.includes(\"\\u0000\")) {\n      eventId = value;\n    } else if (field === \"retry\") {\n      const retry = parseInt(value, 10);\n      if (!Number.isNaN(retry)) {\n        onParse({ type: \"reconnect-interval\", value: retry });\n      }\n    }\n  }\n}\n\nexport class ResultStream extends TransformStream {\n  constructor() {\n    super({\n      transform(chunk, controller) {\n        if (chunk.data === \"[DONE]\") {\n          return;\n        }\n\n        try {\n          const data = JSON.parse(chunk.data);\n          controller.enqueue(data);\n        } catch (err) {\n          console.error(`failed to parse incoming data (${err.stack}): ${chunk.data}`);\n          return;\n        }\n      },\n    });\n  }\n}\n\nexport const getEventStream = (body: ReadableStream) => {\n  const { readable, writable } = new TransformStream();\n  const eventStream = (body ?? new ReadableStream())\n    .pipeThrough(new TextDecoderStream())\n    .pipeThrough(new EventSourceParserStream())\n    .pipeThrough(new ResultStream());\n  const reader = eventStream.getReader();\n  const writer = writable.getWriter();\n  const encoder = new TextEncoder();\n  const write = async (data: string) => {\n    await writer.write(encoder.encode(data));\n  };\n  return {\n    readable,\n    reader,\n    writer,\n    write,\n  };\n};\n\n// end eventsource-parser\n\nexport const readStream = (\n  body: ReadableStream,\n  debug: boolean,\n  ctx: any,\n  tensorData: boolean,\n  postProcessing: Function | false\n) => {\n  const { readable, reader, writer, write } = getEventStream(body);\n\n  const waitUntil = ctx && ctx.waitUntil ? (f: any) => ctx.waitUntil(f()) : (f: any) => f();\n\n  waitUntil(async () => {\n    try {\n      for (;;) {\n        const { done, value } = await reader.read();\n        if (done) {\n          await write(\"data: [DONE]\\n\\n\");\n          break;\n        }\n        debugLog(debug, \"stream response\", value);\n        if (tensorData) {\n          const output = tensorByName(value.result);\n          await write(`data: ${JSON.stringify(postProcessing ? postProcessing(output) : output)}\\n\\n`);\n        } else {\n          await write(`data: ${JSON.stringify(value)}\\n\\n`);\n        }\n      }\n    } catch (e) {\n      console.error(e.stack);\n      await write(\"an unknown error occurred while streaming\");\n    }\n    await writer.close();\n  });\n\n  return readable;\n};\n", "import { Tensor, TensorsObject } from \"./tensor\";\nimport { readStream, getModelSettings, parseInputs, tensorByName } from \"./tools\";\n\ntype RunOptions = {\n  stream: boolean;\n  postProcessing?: Function;\n};\n\ntype InternalAPI = {\n  input: any[];\n  stream: boolean;\n  output?: any[];\n};\n\nexport type SessionOptions = {\n  extraHeaders?: {};\n  ctx?: any;\n  debug?: boolean;\n  apiEndpoint?: string;\n  prefix?: string;\n};\n\nclass InferenceUpstreamError extends Error {\n  httpCode: number;\n  constructor(message: string, httpCode: number) {\n    super(message);\n    this.name = \"InferenceUpstreamError\";\n    this.httpCode = httpCode;\n  }\n}\n\nexport class InferenceSession {\n  private binding: any;\n  private model: string;\n  private options: SessionOptions;\n\n  constructor(binding: any, model: string, options: SessionOptions = {}) {\n    this.binding = binding;\n    this.model = model;\n    this.options = options;\n  }\n\n  async run(inputs: Array<Tensor<any>> | TensorsObject, options?: RunOptions): Promise<TensorsObject | ReadableStream> {\n    const jsonInputs = parseInputs(inputs);\n\n    const inferRequest: InternalAPI = {\n      input: jsonInputs,\n      stream: false,\n    };\n    if (options?.stream) {\n      inferRequest.stream = options?.stream;\n    }\n\n    const body = JSON.stringify(inferRequest);\n    const compressedReadableStream = new Response(body).body.pipeThrough(new CompressionStream(\"gzip\"));\n    const reqId = crypto.randomUUID();\n\n    const fetchOptions = {\n      method: \"POST\",\n      body: compressedReadableStream,\n      headers: {\n        ...(this.options?.extraHeaders || {}),\n        \"content-encoding\": \"gzip\",\n        \"cf-ai-req-id\": reqId,\n        \"cf-consn-sdk-version\": \"@version@\",\n        \"cf-consn-model-id\": `${this.options.prefix ? `${this.options.prefix}:` : \"\"}${this.model}`,\n      },\n    };\n\n    const res = this.options.apiEndpoint\n      ? await fetch(this.options.apiEndpoint, fetchOptions)\n      : await this.binding.fetch(\"http://workers-binding.ai/run\", fetchOptions);\n\n    if (!res.ok) {\n      throw new InferenceUpstreamError(await res.text(), res.status);\n    }\n\n    if (!options?.stream) {\n      const { result } = await res.json();\n      return tensorByName(result);\n    } else {\n      return readStream(res.body, this.options.debug, this.options.ctx, true, options.postProcessing);\n    }\n  }\n}\n", "import { Tensor } from \"./tensor\";\nimport { InferenceSession, SessionOptions } from \"./session\";\nimport { readStream, getModelSettings, debugLog } from \"./tools\";\nimport { modelMappings, addModel } from \"./catalog\";\n\nexport type AiTask = {\n  tensors: Array<Tensor<any>>;\n  preProcessedInputs: any;\n  postProcessedOutputs: any;\n  schema: any;\n  preProcessing: Function;\n  generateTensors: Function;\n  postProcessing: Function;\n  postProcessingStream?: Function;\n};\n\ntype AiOptions = {\n  debug?: boolean;\n  apiGateway?: Boolean;\n  apiAccount?: string;\n  apiToken?: string;\n  sessionOptions?: SessionOptions;\n};\n\ntype ModelMappings = typeof modelMappings;\n\ntype GetModelName<T> = {\n  [K in keyof T]: T[K] extends { models: readonly (infer U)[] } ? U : never;\n}[keyof T];\n\ntype ModelName = GetModelName<ModelMappings>;\n\ntype GetModelClass<M extends ModelName, T> = {\n  [K in keyof T]: T[K] extends { models: readonly string[]; class: infer C }\n    ? M extends T[K][\"models\"][number]\n      ? C\n      : never\n    : never;\n}[keyof T];\n\ntype ConstructorParametersForModel<M extends ModelName> = ConstructorParameters<GetModelClass<M, ModelMappings>>[0];\n\nexport class Ai {\n  private binding: any;\n  private options: AiOptions;\n  private task: AiTask;\n\n  constructor(binding: any, options: AiOptions = {}) {\n    this.binding = binding;\n    this.options = options;\n  }\n\n  addModel(task: string, model: string, settings: any) {\n    addModel(task, model, settings);\n  }\n\n  async run<M extends ModelName>(model: M, inputs: ConstructorParametersForModel<M>): Promise<any> {\n    const tasks = Object.keys(modelMappings);\n\n    for (var t in tasks) {\n      if (modelMappings[tasks[t]].models.indexOf(model) !== -1) {\n        const settings = getModelSettings(model);\n        const sessionOptions = this.options.sessionOptions || {};\n        this.task = new modelMappings[tasks[t]].class(inputs, settings);\n        debugLog(this.options.debug, \"input\", inputs);\n        // code to handle using the API Gateway instead\n        if (this.options.apiGateway) {\n          const fetchOptions = {\n            method: \"POST\",\n            body: JSON.stringify(inputs),\n            headers: {\n              authorization: `Bearer ${this.options.apiToken}`,\n              \"content-type\": \"application/json\",\n            },\n          };\n          const res = await fetch(\n            `https://api.cloudflare.com/client/v4/accounts/${this.options.apiAccount}/ai/run/${model}`,\n            fetchOptions\n          );\n          if (!res.ok) {\n            throw new Error(await res.text());\n          }\n          // normal\n          if (res.headers.get(\"content-type\") == \"application/json\") {\n            const { result } = await res.json();\n            return result;\n          } else if (res.headers.get(\"content-type\") == \"text/event-stream\") {\n            return readStream(res.body, this.options.debug, sessionOptions.ctx, false, false);\n          } else {\n            // binary\n            const blob = await res.blob();\n            return blob;\n          }\n        } else {\n          // Normal binding\n          this.task.preProcessing();\n          debugLog(this.options.debug, \"pre-processed inputs\", this.task.preProcessedInputs);\n          this.task.generateTensors();\n          debugLog(this.options.debug, \"input tensors\", this.task.tensors);\n          const session = new InferenceSession(this.binding, model, {\n            ...{ debug: this.options.debug ? true : false },\n            ...sessionOptions,\n          });\n          if ((inputs as any).stream) {\n            debugLog(this.options.debug, \"streaming\", false);\n            return await session.run(this.task.tensors, {\n              stream: true,\n              postProcessing: (r: any) => {\n                return this.task.postProcessingStream(r);\n              },\n            });\n          } else {\n            const response = await session.run(this.task.tensors);\n            debugLog(this.options.debug, \"response\", response);\n            this.task.postProcessing(response, sessionOptions.ctx);\n            debugLog(this.options.debug, \"post-processed response\", this.task.postProcessedOutputs);\n            return this.task.postProcessedOutputs;\n          }\n        }\n      }\n    }\n\n    throw new Error(`No such model ${model} or task`);\n  }\n}\n", "import { Hono } from 'hono'\nimport { renderer } from './renderer'\nimport { Ai } from '@cloudflare/ai'\nimport script from '../assets/script.js'\n\ntype Bindings = {\n  AI: any;\n}\n\nexport interface Env {\n  AI: any;\n}\n\nconst app = new Hono<{ Bindings: Bindings }>()\n\napp.get('/script.js', (c) => {\n  return c.body(script, 200, {\n    'Content-Type': 'text/javascript'\n  })\n})\n\n// app.get('/image/:id', async (c) => {\n//   const imageId = c.req.param('id');\n//   // Fetch the image data using the imageId. This might involve fetching from your KV store.\n//   const imageData = await c.env.AIART.get(imageId);\n//   // Assuming imageData is a base64-encoded string of the image\n//   const htmlContent = `\n//     <html>\n//       <body>\n//         <img src=\"data:image/png;base64,${imageData}\" alt=\"Generated Artwork\" />\n//       </body>\n//     </html>\n//   `;\n//   return c.html(htmlContent);\n// });\n\napp.get('/api/images', async (c) => {\n  const keys = await getLastTenImageKeys(c.env.AIART);\n  const imagePromises = keys.map((key) => c.env.AIART.get(key));\n  const images = (await Promise.all(imagePromises)).filter(Boolean);\n  return c.json(images);\n});\n\napp.get('*', renderer)\n\napp.get('/', async (c) => {\n  return c.render(\n    <>\n      <h2>What should the AI generated art be of?</h2>\n      <form id=\"input-form\" autocomplete=\"off\" method=\"post\">\n        <input\n          type=\"text\"\n          name=\"query\"\n          style={{\n            width: '69%'\n          }}\n          autofocus\n        />\n        <select\n          name=\"style\"\n          style={{\n            width: '20%',\n            margin: '0 0.5%'\n          }}\n        >\n          <option value=\"abstract\">Abstract</option>\n          <option value=\"realistic\">Realistic</option>\n          <option value=\"surrealistic\">Surrealistic</option>\n          <option value=\"cubism\">Cubism</option>\n          <option value=\"popart\">Pop Art</option>\n          <option value=\"impressionism\">Impressionism</option>\n          <option value=\"expressionism\">Expressionism</option>\n          <option value=\"futurism\">Futurism</option>\n          <option value=\"advertisement\">Advertisement</option>\n          <option value=\"comic\">Comic</option>\n          <option value=\"cartoon\">Cartoon</option>\n        </select>\n        <button type=\"submit\">Create</button>\n      </form>\n      <pre\n        id=\"ai-content\"\n        style={{\n          'white-space': 'pre-wrap',\n          'display': 'none'\n        }}\n      ></pre>\n      <h4 id=\"galleryTitle\">What people have already made \uD83D\uDC47</h4>\n      <div class=\"block\" id=\"gallery\" style={{ display: 'flex', flexWrap: 'wrap', justifyContent: 'space-between' }}>\n      </div>\n    </>\n  )\n})\n\n// Helper function to get the last 10 image keys\n// You need to implement this based on your KV store's capabilities\nasync function getLastTenImageKeys(kvStore): Promise<string[]> {\n  // Assuming the KV store has a list of keys ordered by insertion time\n  const keys = await kvStore.list({ limit: 100, reverse: false });\n  const randomKeys = keys.keys\n    .map(entry => entry.name)\n    .sort(() => Math.random() - 0.5)\n    .slice(0, 25);\n\n  return randomKeys;\n}\n\napp.post('/ai', async (c) => {\n  // Get prompt and style from request\n  const json = await c.req.json();\n  const prompt = json.prompt;\n  const style = json.style;\n\n  // const ai = new Ai(c.env.AI)\n  // const result = await ai.run('@cf/huggingface/distilbert-sst-2-int8', {\n  //   text: prompt\n  // }).then(res => restructureSentiment(res, prompt))\n\n  // if (result.sentiment === 'NEGATIVE') {\n  //   return c.render(\"https://ichef.bbci.co.uk/news/976/cpsprodpb/16620/production/_91408619_55df76d5-2245-41c1-8031-07a4da3f313f.jpg\");\n  // }\n\n  // if (prompt.includes('naked') || prompt.includes('hitler') || prompt.includes(\"star\")) {\n  //   return c.render(\"https://ichef.bbci.co.uk/news/976/cpsprodpb/16620/production/_91408619_55df76d5-2245-41c1-8031-07a4da3f313f.jpg\");\n  // }\n  // const newPrompt = `Create artwork of ${prompt} in the style of ${style}.`\n  // const inputs = {\n  //   prompt: newPrompt,\n  // };\n\n  // const response = await ai.run('@cf/stabilityai/stable-diffusion-xl-base-1.0', inputs);\n  // console.log(response)\n  // // Generate a unique key for the image\n  // const imageKey = `image-${Date.now()}`;\n  // // Store the image in Workers KV along with the current timestamp and alt text for sorting\n  // const metadata = { uploadDate: Date.now(), prompt, style, newPrompt };\n  // await c.env.AIART.put(imageKey, response, { expirationTtl: 86400, metadata }); // Adjust TTL as needed\n\n  // // Send the image in our response as a PNG\n  // return new Response(response, {\n  //   headers: {\n  //     \"content-type\": \"image/png\",\n  //   },\n  // });\n\n  const ai = new Ai(c.env.AI);\n\n  const inputs = {\n    prompt: \"cyberpunk cat\",\n  };\n\n  const response = await ai.run(\"@cf/stabilityai/stable-diffusion-xl-base-1.0\", inputs);\n\n  return new Response(response, {\n    headers: {\n      \"content-type\": \"image/png\",\n    },\n  });\n\n  return c.render(\n    <img src={response} />\n  )\n})\n\nfunction restructureSentiment([neg, pos], comment) {\n  console.log(neg, pos, comment)\n  // if (neg.score > pos.score) {\n  if (neg.score > pos.score) {\n    return {\n      text: comment,\n      sentiment: 'NEGATIVE',\n      score: neg.score\n    }\n  } else {\n    return {\n      text: comment,\n      sentiment: 'POSITIVE',\n      score: pos.score\n    }\n  }\n}\n\nexport default app\n"],
  "mappings": "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",
  "names": ["renderer", "options", "html", "html2", "raw", "app", "Node", "Node", "Hono", "value", "modelSettings", "Hono"]
}
